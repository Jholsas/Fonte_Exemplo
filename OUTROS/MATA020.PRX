#INCLUDE "MATA020.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FWADAPTEREAI.CH"
#INCLUDE "TbIconn.ch"
#INCLUDE "TopConn.ch"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATA020  ³ Autor ³ Jorge Queiroz         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de atualizacao de Fornecedores.                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Mata020(ExpA1,ExpN1)		                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1: array a ser passado p/ a AxCadastro	(rot.aut.)	  ³±±
±±³          ³ ExpN1: Numero da opcao selecionada 		    (rot.aut.)	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T. 														  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MATA020(xRotAuto,nOpcAuto)

Local oBrowse
Local cFiltraSA2	:= " "
Local aIndexSA2		:= {}
Local bFiltraBrw	:= " "
Local aMemUser		:= {}
Local nPosFor		:= 0
Local nPosLoja		:= 0
Local nPosMun		:= 0
Local bPre          := {|nOpc| If(nOpc == 5,RegToMemory("SA2",.F.,.F.),),aFornNovo[1]:=M->A2_COD}
Local bOK           := {|nOpc| IIF(fCanAvalSA2(nOpc-2),(aFornNovo[2]:=M->A2_COD,Iif(aFornNovo[2]!=aFornNovo[1] .And. __lSx8,RollBackSx8(),.T.),.T.),.F.) }
Local bTTS			:= {|nOpc| FAvalSa2(nOpc-2), aFornNovo[2]:= M->A2_COD}
Local bNoTTS		:= {|nOpc| fVariavel(nOpc-2) .And. fPosIncFor(nOpc)}

Private cCadastro	:= OemtoAnsi(STR0006)  //"Fornecedores"
Private aRotina := MenuDef(.T.)
Private aRotAuto	:= Nil
Private lTMSOPdg	:= AliasInDic('DEG') .And. SuperGetMV('MV_TMSOPDG',,'0') == '2'
Private lPyme		:= Iif(Type("__lPyme") <> "U",__lPyme,.F.)
Private aMemos		:= {}
Private lIntLox		:= GetMV("MV_QALOGIX") == "1"
Private aCpoAltSA2	:= {}	// vetor usado na gravacao do historico de alteracoes
Private lCGCValido	:= .F.	// Variavel usada na validacao do CNPJ/CPF (utilizando o Mashup)
Private lConfBco	:= .F. // Confirmacao da Dialog de amarracao fornecedor x bancos (Localizados) - FIL
Private aCmps		:= {}
Private aPreCols	:= {}
Private aCols		:= {}
Private aHeader		:= {}
Private cCodFor		:= ""
Private cCodLoj		:= ""
Private l020Auto	:= ValType(xRotAuto) == "A"
Private lSetMenu	:= .T.
Private aParam		:= {bPre,bOK,bTTS,bNoTTS}
Private aFornNovo	:={"",""}
Private aColsAux := {}
Private aColsFBco	:=	{}
Private aHeadFBco	:=	{}

//-- Variavel usada para verificar se o disparo da funcao IntegDef() pode ser feita manualmente
Static lIntegDef	:=  FWHasEAI("MATA020",.T.,,.T.)
Static lHistFiscal 	:= HistFiscal()
Static lExistFKJ
Static lIntUnqCod  	:= FwHASEAI("MATA020B")
Static lMvcMata020	:= NIL

// Ajusta o adapter
A020AjInteg()

lMvcMata020 := IIF(ValType(lMvcMata020) == "L",lMvcMata020, TableInDic( "G3Q", .F. ))

If lMvcMata020
	If FWModeAccess("SA2") == FWModeAccess("FIL")
		If ValType(xRotAuto) == "A"
			A020Auto(xRotAuto, nOpcAuto)
		Else
			oBrowse := BrowseDef()
			oBrowse:Activate()

			A020F12End()
		EndIf
	Else
		Help( , , 'Help', ,STR0082, 1, 0 )
		Return .F.
	EndIf
Else

	//-------------------------------------------------------------------
	// Entrada para a ativação de Históricos Fiscais
	// É necessário que seja abilitado o parâmetro:
	// MV_HISTFIS
	//-------------------------------------------------------------------
	If lHistFiscal
		Aadd(aRotina, {STR0053, "A020Hist()", 0, 0, 0}) //Histórico
	EndIf

	If Valtype(lExistFKJ) == "U"
		lExistFKJ:= cPaisLoc == "BRA" .And. TableInDic("FKJ")
	EndIf
	//Ponto de entrada para adicao de campos memo do usuario
	If ExistBlock( "MA020MEM" )
		If Valtype(	aMemUser := ExecBlock( "MA020MEM", .F., .F. ) ) == "A"
			AEval( aMemUser, { |x| AAdd( aMemos, x ) } )
		EndIf
	EndIf

	//Habilita a perguntas da rotina
	Pergunte("MTA020",.F.)
	If aRotAuto==Nil
		Set Key VK_F12 to FAtiva()
	EndIf

	If xRotAuto <> Nil
		DEFAULT nOpcAuto := 3
		aRotAuto := xRotAuto
		//|Obter o A2_COD_MUN direto da base quando a alteração for originada do Portal do Fornecedor  |
		//|Tal funcionalidade foi implementada inicialmente para que as alterações efetuadas no Portal |
		//|não sejem barradas pela rotina automática, porém será necessário rever WebService do Portal |
		//|Implementar a consulta F3 para o campo etc. 												   |
		If IsInCallStack("PUTSUPPLIER")
			nPosFor:=aScan(aRotAuto,{|x| AllTrim(x[1])== "A2_COD"})
			nPosLoja:=aScan(aRotAuto,{|x| AllTrim(x[1])== "A2_LOJA"})
			nPosMun:=aScan(aRotAuto,{|x| AllTrim(x[1])== "A2_COD_MUN"})
			If nPosFor>0 .And. nPosLoja>0 .And. nPosMun==0
				DbSelectArea("SA2")
				DbSetOrder(1)
				MsSeek(xFilial("SA2")+aRotAuto[nPosFor][2]+aRotAuto[nPosLoja][2])
				If !Eof()
					AADD(aRotAuto,{"A2_COD_MUN",SA2->A2_COD_MUN,NIL})
				EndIf
			EndIf
		EndIf
		l030Auto := .T.
		MBrowseAuto(nOpcAuto,aRotAuto,"SA2")
	Else
		//Verificacao de filtro na Mbrowse
		If ( ExistBlock("MA020FIL") )
			cFiltraSA2 := AllTrim(ExecBlock("MA020FIL",.F.,.F.))
			If Valtype(cFiltraSA2) == "C" .And. !Empty(cFiltraSA2)
				bFiltraBrw 	:= {|| FilBrowse("SA2",@aIndexSA2,@cFiltraSA2)}
				Eval(bFiltraBrw)
			EndIf
		EndIf

		mBrowse(6,1,22,75,"SA2")

		//Finaliza o uso da funcao FilBrowse e retorna os indices padroes.
		If !Empty(cFiltraSA2) .And. Len(aIndexSA2) > 0
			EndFilBrw("SA2",aIndexSA2)
		EndIf
	Endif

	If aRotAuto == Nil
		Set Key VK_F12 To
	EndIf
EndIf

Return( .T. )

//------------------------------------------------------------------
/*/{Protheus.doc} A020Visual
Chamada Integração Fornecedor
@type function
@author	Rodrigo Machado Pontes
@version	P11
@since	17/08/2015
/*/
//------------------------------------------------------------------
Static Function A020INTF()

Local aRet	:= {}
Local lRet	:= .T.

aRet := FwIntegdef("MATA020")

If ValType(aRet) == "A"
	If aRet[1]
		lRet := .T.
	Else
		lRet := .F.
		If !Empty(aRet[2])
			Help(" ",1,"FWINTEGDEF",, aRet[2] ,3,0)
		Else
			Aviso("Atenção","Verificar problema no Monitor EAI",{"OK"},3)
		Endif
	Endif
Endif

Return lRet

//------------------------------------------------------------------
/*/{Protheus.doc} A020Visual
Visualização do cadastro de fornecedores
@type function
@author	Rodrigo Machado Pontes
@version	P11
@since	25/05/2015
@param	cAlias	Alias da tabela
@param	nReg	Recno
@param	nOpc	Opção selecionada 2 - Visualizar,3 - Incluir, 4 - Alterar, 5 - Excluir
/*/
//------------------------------------------------------------------
Function A020Visual(cAlias,nReg,nOpc)

Local aButtons	:= {}
Local aUsrBut		:= {}
Local lPyme		:= Iif(Type("__lPyme")  <> "U",__lPyme,.F.)
Local oModelM

If Type("aColsAux") == "U"
	Private aColsAux := {}
EndIf

If lMvcMata020
	oModelM := FWLoadModel("MATA020M")
	FWExecView (STR0002, IIF(oModelM != Nil,"MATA020M","MATA020"),  MODEL_OPERATION_VIEW,,{||.T.},,,,,,,)
Else
	If cPaisLoc == "RUS"
		SetKey(K_CTRL_A,{|| CRMA680RUS("SA2",xFilial("SA2")+ SA2->A2_COD + SA2->A2_LOJA,.T.)})
	EndIf

	If Type("lTMSOPdg") <> "L"
		lTMSOPdg := AliasInDic('DEG') .And. SuperGetMV('MV_TMSOPDG',,'0') == '2'
	Endif

	//Habilita o Banco de Conhecimento
	If !lPyme
		aButtons  := {{"WEB",{|| fGeoWizard("SA2",M->A2_COD+M->A2_LOJA,{"M->A2_END","M->A2_MUN","M->A2_EST","M->A2_CEP","M->A2_BAIRRO"},{|lContinua| CodGeoRev(aCoor,NIL,@lContinua)[6] <> M->A2_CEP})},STR0022, STR0023 },;
						{"BMPVISUAL",{|| fConsWizard({M->A2_NOME, M->A2_TIPO, M->A2_NREDUZ, M->A2_END, M->A2_CEP, M->A2_DDD, M->A2_TEL, M->A2_CGC,"",""})}, STR0020, STR0021 }}
	EndIf

	If AliasInDic("FIL")
		aAdd(aButtons,{"BUDGET ",{|| FtBanco("SA2",SA2->(RecNo()),2)}, STR0068, STR0068 } )
	Endif

	If lExistFKJ
		aAdd(aButtons, {'CONTAINER'   ,{|| FINA993(2) },STR0077,STR0077} ) //"CPFs IR Progr."
	EndIf

	//Habilita Integracao com Operadoras de Frotas
	If lTMSOPdg
		If FindFunction("TMSCORNTRC")
			aadd(aButtons,{'BMPGROUP', {|| TMSCORNTRC() }, STR0050, STR0050 }) //--"Consulta RNTRC"
		EndIf
	EndIf

	//Ponto de entrada para adicao de botoes de usuario
	If ExistBlock( "MA020BUT" )
		If Valtype( aUsrBut := Execblock( "MA020BUT", .f., .f. ) ) == "A"
			AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
		EndIF
	EndIf

	AxVisual(cAlias,nReg,nOpc,/*aAcho*/,/*nColMens*/,/*cMensagem*/,/*cFunc*/,aButtons,/*lMaximized*/)

	If(Type("aColsFBco") == "A")
		aColsFBco := {}
	Endif

	If(Type("aHeadFBco") == "A")
		aColsFBco := {}
	Endif
EndIf

Return

/*
{Protheus.doc} A020Inclui(cAlias,nReg,nOpc)
	Inclusão do cadastro de fornecedores

	@param	cAlias			Alias da tabela
	@param nReg			Recno
	@param	nOpc			Opção selecionada 2 - Visualizar,3 - Incluir, 4 - Alterar, 5 - Excluir

	@author	Rodrigo Machado Pontes
	@version	P11
	@since	25/05/2015
*/

Function A020Inclui(cAlias,nReg,nOpc)

Local aButtons		:= {}
Local aUsrBut		:= {}
Local nOpcA			:= 0
Local lPyme			:= Iif(Type("__lPyme")  <> "U",__lPyme,.F.)
Local lRet			:= .T.
Local lIncluiBkp	:= .F.
Local lAlteraBkp	:= .F.
Local lRet 			:= .T.
Local oModelM

If lMvcMata020
	oModelM := FWLoadModel("MATA020M")
	FWExecView (STR0003, IIF(oModelM != Nil,"MATA020M","MATA020"),  MODEL_OPERATION_INSERT,,,,,,,,,)
Else
	If Type("lTMSOPdg") <> "L"
		lTMSOPdg := AliasInDic('DEG') .And. SuperGetMV('MV_TMSOPDG',,'0') == '2'
	Endif

	//Habilita o Banco de Conhecimento
	If !lPyme
		aButtons  := {{"WEB",{|| fGeoWizard("SA2",M->A2_COD+M->A2_LOJA,{"M->A2_END","M->A2_MUN","M->A2_EST","M->A2_CEP","M->A2_BAIRRO"},{|lContinua| CodGeoRev(aCoor,NIL,@lContinua)[6] <> M->A2_CEP})},STR0022, STR0023 },;
						{"BMPVISUAL",{|| fConsWizard({M->A2_NOME, M->A2_TIPO, M->A2_NREDUZ, M->A2_END, M->A2_CEP, M->A2_DDD, M->A2_TEL, M->A2_CGC,"",""})}, STR0020, STR0021 }}
	EndIf

	If AliasInDic("FIL")
		aAdd(aButtons,{"BUDGET ",{|| FtBanco("SA2",SA2->(RecNo()),3)}, STR0068, STR0068 } )
	Endif

	If lExistFKJ
		aAdd(aButtons, {'CONTAINER'   ,{|| FINA993(3) },STR0077,STR0077} ) //"CPFs IR Progr."
	EndIf

	// BUSCA SICAF NO INCLUIR FORNECEDOR
	If nModulo == 87
		aadd(aButtons,{ OemToAnsi(STR0003),{|| lSicaf := A020BSCSCF( M->A2_CGC )}, OemToAnsi(STR0072), OemToAnsi(STR0072)}) // "Integração SICAF"
	Endif

	//Habilita Integracao com Operadoras de Frotas
	If lTMSOPdg
		If FindFunction("TMSCORNTRC")
			aadd(aButtons,{'BMPGROUP', {|| TMSCORNTRC() }, STR0050, STR0050 }) //--"Consulta RNTRC"
		EndIf
	EndIf

	//Ponto de entrada para adicao de botoes de usuario
	If ExistBlock( "MA020BUT" )
		If Valtype( aUsrBut := Execblock( "MA020BUT", .f., .f. ) ) == "A"
			AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
		EndIF
	EndIf

	Begin Transaction
		nOpcA := AxInclui(cAlias,nReg,nOpc,/*aAcho*/,/*cFunc*/,/*aCpos*/,"A020TUDOOK()",/*lF3*/,"A020InTra()",aButtons,aParam,aRotAuto)

		//-- CustomerVendor
		If nOpcA == 1 .And. lIntegDef
			RegToMemory("SA2", .F. )
			lRet := A020INTF()

			If !lRet
				//-- Exclusão CustomerVendorReservID
				If lIntUnqCod
					lIncluiBkp	:= INCLUI
					lAlteraBkp	:= ALTERA

					INCLUI	:= .F.
					ALTERA	:= .F.

					MATA020B(.T.,M->A2_COD,"MATA020", .F. , .T. , .F. )

					INCLUI	:= lIncluiBkp
					ALTERA	:= lAlteraBkp
				EndIf

				DisarmTransaction()
				lRet := .F.
				Break
			Else
				//-- Inclusão CustomerVendorReservID
				If lIntUnqCod
					lRet	:= MATA020B(.T.,SA2->A2_COD,"MATA020", .F. , .T. , .F. )
					If !lRet
						DisarmTransaction()
						lRet := .F.
						Break
					EndIf
				EndIf
			EndIf
		Else
			//-- EXCLUSÃO DA RESERVEID
			If lIntegDef .And. lIntUnqCod
				lIncluiBkp	:= INCLUI
				lAlteraBkp	:= ALTERA

				INCLUI	:= .F.
				ALTERA	:= .F.

				MATA020B(.T.,,"MATA020",.F.,.T.,.T.)

				INCLUI	:= lIncluiBkp
				ALTERA	:= lAlteraBkp
			EndIf

		EndIf

		//Chamada de função para verificar integração OMS x CPL
		If lRet .And. FindFunction("OMSXCPLINT") .And. nOpcA == 1
			OMSXCPLINT("SA2")
		EndIf

		//Integra Protheus x LEGAL DESK - SIGAPFS
		//Grava na fila de sincronização se o parâmetro MV_JFSINC = '1' - SIGAPFS
		If FindFunction("J170GRAVA")
			J170GRAVA("SA2", xFilial("SA2") + SA2->A2_COD + SA2->A2_LOJA, "3")
		Endif

	End Transaction

	If(Type("aColsFBco") == "A")
		aColsFBco := {}
	Endif

	If(Type("aHeadFBco") == "A")
		aColsFBco := {}
	Endif
EndIf

Return lRet

/*/
{Protheus.doc} A020Altera(cAlias,nReg,nOpc)
	Alteração do cadastro de fornecedores

	@param	cAlias			Alias da tabela
	@param nReg			Recno
	@param	nOpc			Opção selecionada 2 - Visualizar,3 - Incluir, 4 - Alterar, 5 - Excluir

	@author	Rodrigo Machado Pontes
	@version	P11
	@since	25/05/2015
/*/

Function A020Altera(cAlias,nReg,nOpc)

Local aButtons	:= {}
Local aUsrBut	:= {}
Local nOpcA		:= 0
Local lPyme		:= Iif(Type("__lPyme")  <> "U",__lPyme,.F.)
Local lRet		:= .T.
Local oModelM

If lMvcMata020
	oModelM := FWLoadModel("MATA020M")
	FWExecView (STR0004, IIF(oModelM != Nil,"MATA020M","MATA020"),  MODEL_OPERATION_UPDATE,,{||.T.},,,,,,,)
Else

	If cPaisLoc == "RUS"
		SetKey(VK_F2,{|| TDFieldActv()})
		SetKey(K_CTRL_A,{|| CRMA680RUS("SA2",xFilial("SA2")+ SA2->A2_COD + SA2->A2_LOJA)})
	EndIf

	If Type("lTMSOPdg") <> "L"
		lTMSOPdg := AliasInDic('DEG') .And. SuperGetMV('MV_TMSOPDG',,'0') == '2'
	Endif

	//Habilita o Banco de Conhecimento
	If !lPyme
		aButtons  := {{"WEB",{|| fGeoWizard("SA2",M->A2_COD+M->A2_LOJA,{"M->A2_END","M->A2_MUN","M->A2_EST","M->A2_CEP","M->A2_BAIRRO"},{|lContinua| CodGeoRev(aCoor,NIL,@lContinua)[6] <> M->A2_CEP})},STR0022, STR0023 },;
						{"BMPVISUAL",{|| fConsWizard({M->A2_NOME, M->A2_TIPO, M->A2_NREDUZ, M->A2_END, M->A2_CEP, M->A2_DDD, M->A2_TEL, M->A2_CGC,"",""})}, STR0020, STR0021 }}
	EndIf

	If AliasInDic("FIL")
		aAdd(aButtons,{"BUDGET ",{|| FtBanco("SA2",SA2->(RecNo()),4)}, STR0068, STR0068 } )
	Endif

	If lExistFKJ
		aAdd(aButtons, {'CONTAINER'   ,{|| FINA993(4) },STR0077,STR0077} )//"CPFs IR Progr."
	EndIf

	//Habilita Integracao com Operadoras de Frotas
	If lTMSOPdg
		If FindFunction("TMSCORNTRC")
			aadd(aButtons,{'BMPGROUP', {|| TMSCORNTRC() }, STR0050, STR0050 }) //--"Consulta RNTRC"
		EndIf
	EndIf

	//Ponto de entrada para adicao de botoes de usuario
	If ExistBlock( "MA020BUT" )
		If Valtype( aUsrBut := Execblock( "MA020BUT", .f., .f. ) ) == "A"
			AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
		EndIF
	EndIf

	Begin Transaction

		nOpcA := AxAltera(cAlias,nReg,nOpc,/*aAcho*/,/*aCpos*/,/*nColMens*/,/*cMensagem*/,"A020TUDOOK()","A020AltTra()"/*cTransact*/,/*cFunc*/,aButtons,aParam,aRotAuto)

		If nOpcA == 1 .And. lIntegDef
			lRet := A020INTF()
		Endif

		//Chamada de função para verificar integração OMS x CPL
		If lRet .And. FindFunction("OMSXCPLINT") .And. nOpcA == 1
			OMSXCPLINT("SA2")
		EndIf

		//Integra Protheus x LEGAL DESK - SIGAPFS
		//Grava na fila de sincronização se o parâmetro MV_JFSINC = '1' - SIGAPFS
		If FindFunction("J170GRAVA")
			J170GRAVA("SA2", xFilial("SA2") + SA2->A2_COD + SA2->A2_LOJA, "4")
		Endif

		If !lRet
			DisarmTransaction()
			Break
		Endif

	End Transaction

	If(Type("aColsFBco") == "A")
		aColsFBco := {}
	Endif

	If(Type("aHeadFBco") == "A")
		aColsFBco := {}
	Endif
EndIf

Return .T.

/*
{Protheus.doc} A020Deleta(cAlias,nReg,nOpc)
	Exclusão do cadastro de fornecedores

	@param	cAlias			Alias da tabela
	@param nReg			Recno
	@param	nOpc			Opção selecionada 2 - Visualizar,3 - Incluir, 4 - Alterar, 5 - Excluir

	@author	Rodrigo Machado Pontes
	@version	P11
	@since	25/05/2015
*/

Function A020Deleta(cAlias,nReg,nOpc)

Local aButtons		:= {}
Local aUsrBut		:= {}
Local nOpca			:= 0
Local lPyme			:= Iif(Type("__lPyme")  <> "U",__lPyme,.F.)
Local lRet			:= .T.
Local lIncluiBkp	:= .F.
Local lAlteraBkp	:= .F.
Local oModelM

Private cDelFunc	:= "A020DELOK()"

If lMvcMata020
	oModelM := FWLoadModel("MATA020M")
	FWExecView (STR0005, IIF(oModelM != Nil,"MATA020M","MATA020"),  MODEL_OPERATION_DELETE,,{||.T.},,,,,,,)
Else
	If Type("lTMSOPdg") <> "L"
		lTMSOPdg := AliasInDic('DEG') .And. SuperGetMV('MV_TMSOPDG',,'0') == '2'
	Endif

	//Habilita o Banco de Conhecimento
	If !lPyme
		aButtons  := {{"WEB",{|| fGeoWizard("SA2",M->A2_COD+M->A2_LOJA,{"M->A2_END","M->A2_MUN","M->A2_EST","M->A2_CEP","M->A2_BAIRRO"},{|lContinua| CodGeoRev(aCoor,NIL,@lContinua)[6] <> M->A2_CEP})},STR0022, STR0023 },;
						{"BMPVISUAL",{|| fConsWizard({M->A2_NOME, M->A2_TIPO, M->A2_NREDUZ, M->A2_END, M->A2_CEP, M->A2_DDD, M->A2_TEL, M->A2_CGC,"",""})}, STR0020, STR0021 }}
	EndIf

	If AliasInDic("FIL")
		aAdd(aButtons,{"BUDGET ",{|| FtBanco("SA2",SA2->(RecNo()),5)}, STR0068, STR0068 } )
	Endif

	//Habilita Integracao com Operadoras de Frotas
	If lTMSOPdg
		If FindFunction("TMSCORNTRC")
			aadd(aButtons,{'BMPGROUP', {|| TMSCORNTRC() }, STR0050, STR0050 }) //--"Consulta RNTRC"
		EndIf
	EndIf

	//Ponto de entrada para adicao de botoes de usuario
	If ExistBlock( "MA020BUT" )
		If Valtype( aUsrBut := Execblock( "MA020BUT", .f., .f. ) ) == "A"
			AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
		EndIF
	EndIf

	Begin Transaction

		nOpca := AxDeleta(cAlias,nReg,nOpc,"A020DelTra()"/*cTransact*/,/*aCpos*/,aButtons,aParam,aRotAuto)

		If nOpcA == 2 .And. lIntegDef

			lIncluiBkp	:= INCLUI
			lAlteraBkp	:= ALTERA

			INCLUI	:= .F.
			ALTERA	:= .F.

			lRet := A020INTF()

			INCLUI	:= lIncluiBkp
			ALTERA	:= lAlteraBkp


			If !lRet
				DisarmTransaction()
				Break
			EndIf

		EndIf

		//Integra Protheus x LEGAL DESK - SIGAPFS
		//Grava na fila de sincronização se o parâmetro MV_JFSINC = '1' - SIGAPFS
		If FindFunction("J170GRAVA")
			J170GRAVA("SA2", xFilial("SA2") + SA2->A2_COD + SA2->A2_LOJA, "5")
		Endif

	End Transaction

	If(Type("aColsFBco") == "A")
		aColsFBco := {}
	Endif

	If(Type("aHeadFBco") == "A")
		aColsFBco := {}
	Endif
EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ fPosIncFor ³ Autor ³ Bruno Schmidt         ³ Data ³ 28.10.10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Ponto de Entrada Apos Incluir o Fornecedor                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Opcao de avaliacao                                     ³±±
±±³          ³       [3] Inclusao                                           ³±±
±±³          ³       [4] Alteracao                                          ³±±
±±³          ³       [5] Exclusao                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA020                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fPosIncFor(nOpcA)

	If ExistBlock("MT20FOPOS")
		ExecBlock("MT20FOPOS",.F.,.F.,{nOpcA})
	EndIf

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FAtiva   ³ Autor ³ Cristina Ogura        ³ Data ³ 18.10.95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chama a pergunte                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum												      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum 													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA020                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function FAtiva()
pergunte("MTA020",.T.)
Return Nil


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³fCanAvalSA³ Autor ³Eduardo Riera          ³ Data ³10.09.2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verifica se eh possivel a exclusao de um fornecedor         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fCanAvalSA2(ExpN1)                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Opcao de avaliacao                                   ³±±
±±³          ³       [1] Inclusao                                         ³±±
±±³          ³       [2] Alteracao                                        ³±±
±±³          ³       [3] Exclusao                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: .T. se o fornecedor posicionado pode ser deletado    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA020                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fCanAvalSA2(nOpcA, cInteg)

Local aArea     := GetArea()
Local aAreaSA5  := SA5->(GetArea())
Local aAreaSM0  := SM0->(GetArea())
Local aFilial   := {}
Local aTabExc	:= {}
Local cBckFil   := cFilAnt
Local nX        := 0
Local nY		:= 0
Local lRetorno  := .T.
Local bCampoSA2 := { |x| Field(x) }
Local cFiliais	:= ""
Local lNGVALSX9	:= FindFunction("NGVALSX9")
Local lA020EOK	:= ExistBlock("A020EOK")
Local cQuery    := ""
Local cAliasQry := ""
Local cAliasCO3 := ""
Local lMvcM020	:= TableInDic( "G3Q", .F. )

// ====================================================================
// VERIFICA INTEGRACAO COM SIGATAF
Local lIntTAF  := FindFunction("TAFExstInt") .AND. TAFExstInt()

Default cInteg:= .T.

Do Case
	Case nOpcA == 1
			lRetorno := ExistChav("SA2",M->A2_COD+M->A2_LOJA)

			If lRetorno .And. nModulo == 72
				lRetorno := KEXF810()
				If Valtype(lRetorno) <> "L"
					lRetorno := .T.
				EndIf
			EndIf

			If lRetorno .And. ExistBlock("MA020TOK")
				lRetorno := ExecBlock("MA020TOK",.F.,.F.)
				If Valtype(lRetorno) <> "L"
					lRetorno := .T.
				EndIf
			EndIf

			If lRetorno .And. ExistTemplate("MA020TOK")
				lRetorno := ExecTemplate("MA020TOK",.F.,.F.)
				If Valtype(lRetorno) <> "L"
					lRetorno := .T.
				EndIf
			EndIf

			If lRetorno .And. !FCanAvalSA2(2,.F.)
				lRetorno := .F.
			EndIf

			//-- Integração Protheus x GFE (INCLUSAO,ALTERACAO)
		If lRetorno
			lRetorno := MATA020IPG(Iif(INCLUI,3,Iif(ALTERA,4,5)))
		EndIf

		// ==============================================
		// Demetrio - 11/2014 - Integração TAF
		// ==============================================
		If lRetorno .AND. lIntTAF
			IIF(Type("l020Auto") != "U" .And. !l020Auto,;
				MsgRun( STR0086,STR0085 , {|| TAFIntOnLn("T003FOR",NIL/*nOpc*/,cFilAnt) } ),; // "Realizando integração com SIGATAF - Aguarde"
				TAFIntOnLn("T003FOR",NIL/*nOpc*/,cFilAnt))
		EndIf

	Case nOpcA == 2
		If QE6->(LastRec())>0
			If !Empty(M->A2_FATAVA) .And. (Empty(M->A2_DTAVA) .Or. Empty(M->A2_DTVAL))
				Aviso("A020DA",TRIM(SA2->A2_COD)+"/"+TRIM(SA2->A2_LOJA)+" => "+STR0010,{"Ok"})	// "Datas Avaliaâ„¡o/Validade nãƒ» especificadas."###"Atenâ„¡o"
				lRetorno := .F.
			EndIf
			If lRetorno
				If M->A2_DTAVA > M->A2_DTVAL
					lRetorno := .F.
				EndIf
			EndIf
		EndIf
		If lRetorno .And. ExistBlock("MA020ALT")
			lRetorno := ExecBlock("MA020ALT",.F.,.F.)
			If Valtype(lRetorno) <> "L"
				lRetorno := .T.
			EndIf
		EndIf

		If lRetorno .And. ExistTemplate("MA020ALT")
			lRetorno := ExecTemplate("MA020ALT",.F.,.F.)
			If Valtype(lRetorno) <> "L"
				lRetorno := .T.
			EndIf
		EndIf

		If lRetorno .And. cPaisLoc == "ARG"
			If M->A2_PORIVA < 100.00 .And. (Empty(M->A2_IVPCCOB) .Or. Dtos(M->A2_IVPCCOB) < Dtos(dDataBase))
				Aviso("A020IVA",STR0017+Chr(13)+STR0018,{"Ok"})  //"Cuando el percentagen de retenciî‰¢ del IVA es menor que 100% es necesario "+Chr(13)+"ingresar una fecha valida para la observaciî‰¢."
				lRetorno := .F.
			EndIf
		EndIf

		If cInteg
		//-- Integração Protheus x GFE (INCLUSAO,ALTERACAO)
			If lRetorno
				lRetorno := MATA020IPG(Iif(INCLUI,3,Iif(ALTERA,4,5)))
			EndIf

			// ==============================================
			// Demetrio - 11/2014 - Integração TAF
			// ==============================================
			If lRetorno .AND. lIntTAF
				IIF(Type("l020Auto") != "U" .And. !l020Auto,;
					MsgRun( STR0086,STR0085 , {|| TAFIntOnLn("T003FOR",NIL/*nOpc*/,cFilAnt) } ),; // "Realizando integração com SIGATAF - Aguarde"
					TAFIntOnLn("T003FOR",NIL/*nOpc*/,cFilAnt))
			EndIf
		EndIf

	Case nOpcA == 3

		If lIntLox
			MessageDlg(STR0033) //"Realizar a exclusao do fornecedor/loja pelo ambiente Logix"
			lRetorno := .f.
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o Ponto de Entrada                                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Existblock("A020DELE")
			lRetorno := ExecBlock("A020DELE",.F.,.F.)
			If Valtype(lRetorno) <> "L"
				lRetorno := .T.
			EndIf
		EndIf
		If lRetorno
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Novas validacoes e/ou confirmacao da exclusao - Average      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			IF ExistBlock("EICPMS01")
				lRetorno := ExecBlock("EICPMS01",.F.,.F.,"CADFAB")
				If Valtype(lRetorno) <> "L"
					lRetorno := .F.
				EndIf
			EndIf
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica em todas as Filiais                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRetorno
			//Array utilizado para verificar o compartilhamento das tabelas e montagem da string de filiais utilizada nas Querys.
			//Se for alterar este Array, verifique a posição das tabelas nas Querys.
			Aadd(aTabExc,{"SA5","='"+xFilial("SA5")+"'"})
			Aadd(aTabExc,{"DUJ","='"+xFilial("DUJ")+"'"})
			Aadd(aTabExc,{"AIC","='"+xFilial("AIC")+"'"})
			Aadd(aTabExc,{"SUC","='"+xFilial("SUC")+"'"})
			Aadd(aTabExc,{"SC5","='"+xFilial("SC5")+"'"})
			Aadd(aTabExc,{"SC1","='"+xFilial("SC1")+"'"})
			Aadd(aTabExc,{"SC7","='"+xFilial("SC7")+"'"})
			Aadd(aTabExc,{"SC3","='"+xFilial("SC3")+"'"})
			Aadd(aTabExc,{"NO7","='"+xFilial("NO7")+"'"})
			Aadd(aTabExc,{"SE2","='"+xFilial("SE2")+"'"})
			Aadd(aTabExc,{"SF1","='"+xFilial("SF1")+"'"})
			Aadd(aTabExc,{"SF2","='"+xFilial("SF2")+"'"})
			Aadd(aTabExc,{"SAD","='"+xFilial("SAD")+"'"})
			Aadd(aTabExc,{"AH1","='"+xFilial("AH1")+"'"})
			Aadd(aTabExc,{"CNC","='"+xFilial("CNC")+"'"})
			Aadd(aTabExc,{"DA3","='"+xFilial("DA3")+"'"})
			Aadd(aTabExc,{"DA4","='"+xFilial("DA4")+"'"})
			Aadd(aTabExc,{"AA3","='"+xFilial("AA3")+"'"})
			Aadd(aTabExc,{"AA1","='"+xFilial("AA1")+"'"})
			Aadd(aTabExc,{"SA3","='"+xFilial("SA3")+"'"})
			Aadd(aTabExc,{"CO3","='"+xFilial("CO3")+"'"})

			dbSelectArea("SM0")
			MsSeek(cEmpAnt)
			While ! Eof() .And. SM0->M0_CODIGO == cEmpAnt
				If FWModeAccess("SA2") != "E"
					Aadd(aFilial,FWGETCODFILIAL)
				EndIf
				cFiliais += "'"+FWGETCODFILIAL+"', "
				dbSkip()
			EndDo
			RestArea(aAreaSM0)
			If FWModeAccess("SA2") == "E"
				Aadd(aFilial,cFilAnt)
			EndIf

			For nY := 1 To Len(aTabExc)
				If FWModeAccess(aTabExc[nY][1]) == "E"
					aTabExc[nY][2] := "IN (" + cFiliais
					aTabExc[nY][2] := Left(aTabExc[nY][2], Len(aTabExc[nY][2])-2)+')'
				EndIf
			Next nY

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica a existencia de registros em Produto X Fornecedor   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDSA5 "
				cQuery += "FROM " + RetSQLName("SA5") + " SA5 "
				cQuery += "WHERE SA5.A5_FILIAL "+aTabExc[1][2]+ " AND "
				cQuery += "SA5.A5_FORNECE = '"+SA2->A2_COD+"' AND "
				cQuery += "SA5.A5_LOJA = '"+SA2->A2_LOJA+"' AND "
				cQuery += "SA5.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDSA5 > 0
					HELP(" ",1,"E_DELFOFA1")
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe o Contrato de Fornecedores                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDDUJ "
				cQuery += "FROM " + RetSQLName("DUJ") + " DUJ "
				cQuery += "WHERE DUJ.DUJ_FILIAL "+aTabExc[2][2]+ " AND "
				cQuery += "DUJ.DUJ_CODFOR = '"+SA2->A2_COD+"' AND "
				cQuery += "DUJ.DUJ_LOJFOR = '"+SA2->A2_LOJA+"' AND "
				cQuery += "DUJ.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDDUJ > 0
					Help(" ",1,"A020CON",,STR0052,3,0) //"Este fornecedor não pode ser excluído, pois está sendo utilizado no cadastro de Contrato de Fornecedores"
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe o Fornecedor na Tolerancia por Recebimento³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDAIC "
				cQuery += "FROM " + RetSQLName("AIC") + " AIC "
				cQuery += "WHERE AIC.AIC_FILIAL "+aTabExc[3][2]+ " AND "
				cQuery += "AIC.AIC_FORNEC = '"+SA2->A2_COD+"' AND "
				cQuery += "AIC.AIC_LOJA = '"+SA2->A2_LOJA+"' AND "
				cQuery += "AIC.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDAIC > 0
					Aviso("A020TREC",TRIM(SA2->A2_COD)+"/"+TRIM(SA2->A2_LOJA)+" => "+STR0037,{"Ok"}) // "Este fornecedor não pode ser excluído, pois está sendo utilizado no cadastro de Tolerância de Recebimento"
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe Atendimento no Telemarketing              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDSUC "
				cQuery += "FROM " + RetSQLName("SUC") + " SUC "
				cQuery += "WHERE SUC.UC_FILIAL "+aTabExc[4][2]+ " AND "
				cQuery += "SUC.UC_ENTIDAD = 'SA2' AND "
				cQuery += "SUC.UC_CHAVE = '"+SA2->A2_COD+SA2->A2_LOJA+"' AND "
				cQuery += "SUC.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDSUC > 0
					Aviso("A020TMKT",TRIM(SA2->A2_COD)+"/"+TRIM(SA2->A2_LOJA)+" => "+STR0015,{"Ok"}) // 'Este fornecedor possui atendimento no telemarketing e nao podera ser excluido'
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

		  	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe Pedido de vendas com TIPO B ou D devolucao³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDSC5 "
				cQuery += "FROM " + RetSQLName("SC5") + " SC5 "
				cQuery += "WHERE SC5.C5_FILIAL "+aTabExc[5][2]+ " AND "
				cQuery += "SC5.C5_CLIENTE = '"+SA2->A2_COD+"' AND "
				cQuery += "SC5.C5_LOJACLI = '"+SA2->A2_LOJA+"' AND "
				cQuery += "SC5.C5_TIPO IN ('D','B') AND "
				cQuery += "SC5.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDSC5 > 0
					Help(" ",1,"MA020TEMBD",,"Filial: "+xFilial("SC5"),3,0)
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe Solicitacao de Compra colocada            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDSC1 "
				cQuery += "FROM " + RetSQLName("SC1") + " SC1 "
				cQuery += "WHERE SC1.C1_FILIAL "+aTabExc[6][2]+ " AND "
				cQuery += "SC1.C1_FORNECE = '"+SA2->A2_COD+"' AND "
				cQuery += "SC1.C1_LOJA = '"+SA2->A2_LOJA+"' AND "
				cQuery += "SC1.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDSC1 > 0
					Help(" ",1,"MA020TEMSC",,"Filial: "+xFilial("SC1"),3,0)
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe Pedido de Compra colocada            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDSC7 "
				cQuery += "FROM " + RetSQLName("SC7") + " SC7 "
				cQuery += "WHERE SC7.C7_FILIAL "+aTabExc[7][2]+ " AND "
				cQuery += "SC7.C7_FORNECE = '"+SA2->A2_COD+"' AND "
				cQuery += "SC7.C7_LOJA = '"+SA2->A2_LOJA+"' AND "
				cQuery += "SC7.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDSC7 > 0
					Help(" ",1,"MA020TEMPC",, "Filial: " + xFilial("SC7"),3,0)
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se Contrato de Parceria colocada            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDSC3 "
				cQuery += "FROM " + RetSQLName("SC3") + " SC3 "
				cQuery += "WHERE SC3.C3_FILIAL "+aTabExc[8][2]+ " AND "
				cQuery += "SC3.C3_FORNECE = '"+SA2->A2_COD+"' AND "
				cQuery += "SC3.C3_LOJA = '"+SA2->A2_LOJA+"' AND "
				cQuery += "SC3.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDSC3 > 0
					Help(" ",1,"MA020TEMPR",, "Filial: " + xFilial("SC3"),3,0)
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe Contrato Financeiro para este fornecedor - modulo Gestao Agricola ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDNO7 "
				cQuery += "FROM " + RetSQLName("NO7") + " NO7 "
				cQuery += "WHERE NO7.NO7_FILIAL "+aTabExc[9][2]+ " AND "
				cQuery += "NO7.NO7_CODFOR = '"+SA2->A2_COD+"' AND "
				cQuery += "NO7.NO7_LOJFOR = '"+SA2->A2_LOJA+"' AND "
				cQuery += "NO7.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDNO7 > 0
					Help(" ",1,"MA020AGR",,"Filial: " + xFilial("NO7"),3,0)
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe Contas a Pagar para este fornecedor  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDSE2 "
				cQuery += "FROM " + RetSQLName("SE2") + " SE2 "
				cQuery += "WHERE SE2.E2_FILIAL "+aTabExc[10][2]+ " AND "
				cQuery += "SE2.E2_FORNECE = '"+SA2->A2_COD+"' AND "
				cQuery += "SE2.E2_LOJA = '"+SA2->A2_LOJA+"' AND "
				cQuery += "SE2.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDSE2 > 0
					Help(" ",1,"MA020TEMCP",,"Filial: " + xFilial("SE2"),3,0)
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe Nota Fiscal de entrada deste fornec. ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDSF1 "
				cQuery += "FROM " + RetSQLName("SF1") + " SF1 "
				cQuery += "WHERE SF1.F1_FILIAL "+aTabExc[11][2]+ " AND "
				cQuery += "SF1.F1_FORNECE = '"+SA2->A2_COD+"' AND "
				cQuery += "SF1.F1_LOJA = '"+SA2->A2_LOJA+"' AND "
				cQuery += "SF1.F1_TIPO NOT IN('D','B') AND "
				cQuery += "SF1.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDSF1 > 0
					Help(" ",1,"MA020TEMNF",, "Filial: " + xFilial("SF1"),3,0)
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe Nota Fiscal de saida deste fornecedor³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDSF2 "
				cQuery += "FROM " + RetSQLName("SF2") + " SF2 "
				cQuery += "WHERE SF2.F2_FILIAL "+aTabExc[12][2]+ " AND "
				cQuery += "SF2.F2_CLIENTE = '"+SA2->A2_COD+"' AND "
				cQuery += "SF2.F2_LOJA = '"+SA2->A2_LOJA+"' AND "
				cQuery += "SF2.F2_TIPO IN('D','B') AND "
				cQuery += "SF2.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDSF2 > 0
					Help(" ",1,"MA020TEMNF",, "Filial: " + xFilial("SF2"),3,0)
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe Amarracao por Grupo deste fornecedor ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDSAD "
				cQuery += "FROM " + RetSQLName("SAD") + " SAD "
				cQuery += "WHERE SAD.AD_FILIAL "+aTabExc[13][2]+ " AND "
				cQuery += "SAD.AD_FORNECE = '"+SA2->A2_COD+"' AND "
				cQuery += "SAD.AD_LOJA = '"+SA2->A2_LOJA+"' AND "
				cQuery += "SAD.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDSAD > 0
					Help(" ",1,"MA020TEMAM",, "Filial: "+xFilial("SAD"),3,0)
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se existe algum contrato de direito autoral com fornecedor selecionado.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDAH1 "
				cQuery += "FROM " + RetSQLName("AH1") + " AH1 "
				cQuery += "WHERE AH1.AH1_FILIAL "+aTabExc[14][2]+ " AND "
				cQuery += "AH1.AH1_FORNEC = '"+SA2->A2_COD+"' AND "
				cQuery += "AH1.AH1_LOJAFO = '"+SA2->A2_LOJA+"' AND "
				cQuery += "AH1.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDAH1 > 0
					Help(" ",1,"MA020TEMP4",,"Filial: "+xFilial("AH1"),3,0)
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica contrato - Gestao de contratos ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDCNC "
				cQuery += "FROM " + RetSQLName("CNC") + " CNC "
				cQuery += "WHERE CNC.CNC_FILIAL "+aTabExc[15][2]+ " AND "
				cQuery += "CNC.CNC_CODIGO = '"+SA2->A2_COD+"' AND "
				cQuery += "CNC.CNC_LOJA = '"+SA2->A2_LOJA+"' AND "
				cQuery += "CNC.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea( .T., "TOPCONN", TcGenQry( ,,cQuery ), cAliasQry, .F., .T. )

				If (cAliasQry)->QTDCNC > 0
					Help(" ",1,"MA020TEMCN",, "Filial: "+xFilial("CNC"),3,0)
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf



			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se existe registros no cadastro de Veiculos com fornecedor excluido.   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDDA3 "
				cQuery += "FROM " + RetSQLName("DA3") + " DA3 "
				cQuery += "WHERE DA3.DA3_FILIAL "+aTabExc[16][2]+ " AND "
				cQuery += "DA3.DA3_CODFOR = '"+SA2->A2_COD   +"' AND "
				cQuery += "DA3.DA3_LOJFOR = '"+SA2->A2_LOJA  +"' AND "
				cQuery += "DA3.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDDA3 > 0
					Help(" ",1,"MA020TEMVE",,,3,0)
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se existe registros no cadastro de Motoristas com fornecedor excluido. ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				cQuery := "SELECT COUNT(*) QTDDA4 "
				cQuery += "FROM " + RetSQLName("DA4") + " DA4 "
				cQuery += "WHERE DA4.DA4_FILIAL "+aTabExc[17][2]+ " AND "
				cQuery += "DA4.DA4_FORNEC = '"+SA2->A2_COD   +"' AND "
				cQuery += "DA4.DA4_LOJA   = '"+SA2->A2_LOJA  +"' AND "
				cQuery += "DA4.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDDA4 > 0
					Help(" ",1,"MA020TEMMT",,,3,0)
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se existe registros no cadastro de Base de Atendimento ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno .And. AliasIndic("AA3")
				cQuery := "SELECT COUNT(*) QTDAA3 "
				cQuery += "FROM " + RetSQLName("AA3") + " AA3 "
				cQuery += "WHERE AA3.AA3_FILIAL "+aTabExc[18][2]+ " AND "
				cQuery += "AA3.AA3_FORNEC = '"+SA2->A2_COD   +"' AND "
				cQuery += "AA3.AA3_LOJAFO = '"+SA2->A2_LOJA  +"' AND "
				cQuery += "AA3.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDAA3 > 0
					Aviso(STR0011 ,STR0058,{"Ok"},2) // "Este fornecedor não pode ser excluido, pois estão sendo utilizado no cadastro de base de atendimento.
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se existe registros no cadastro de Atendentes ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno .And. AliasIndic("AA1")
				cQuery := "SELECT COUNT(*) QTDAA1 "
				cQuery += "FROM " + RetSQLName("AA1") + " AA1 "
				cQuery += "WHERE AA1.AA1_FILIAL "+aTabExc[19][2]+ " AND "
				cQuery += "AA1.AA1_CODFOR = '"+SA2->A2_COD   +"' AND "
				cQuery += "AA1.AA1_LOJFOR = '"+SA2->A2_LOJA  +"' AND "
				cQuery += "AA1.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDAA1 > 0
					Aviso(STR0011 ,STR0059,{"Ok"},2) //"Este fornecedor não pode ser excluído, pois esta sendo utilizado no Cadastro de Atendentes. (SIGATEC)"
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se fornecedos esta associado ao cadastro de vendedor - Gestao de contratos  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno .And. AliasIndic("SA3")
				cQuery := "SELECT COUNT(*) QTDSA3 "
				cQuery += "FROM " + RetSQLName("SA3") + " SA3 "
				cQuery += "WHERE SA3.A3_FILIAL "+aTabExc[20][2]+ " AND "
				cQuery += "SA3.A3_FORNECE = '"+SA2->A2_COD   +"' AND "
				cQuery += "SA3.A3_LOJA = '"+SA2->A2_LOJA  +"' AND "
				cQuery += "SA3.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->QTDSA3 > 0
					Aviso(STR0011 ,STR0059,{"Ok"},2) //"Este fornecedor não pode ser excluído, pois esta sendo utilizado no Cadastro de Atendentes. (SIGATEC)"
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			//-------------------------------------------------------------------
			// Verifica se o Fornecedor está associado a algum processo licitatório.
			//-------------------------------------------------------------------
			If lRetorno .And. AliasIndic("CO3")
				cQuery := "SELECT COUNT (CO3.CO3_CODIGO) CODIGO "
				cQuery += "FROM " + RetSQLName("CO3") + " CO3 "
				cQuery += "WHERE CO3.CO3_FILIAL "+aTabExc[21][2]+ " AND "
				cQuery += "CO3.CO3_CODIGO = '"+SA2->A2_COD   +"' AND "
				cQuery += "CO3.CO3_LOJA = '"+SA2->A2_LOJA  +"' AND "
				cQuery += "CO3.D_E_L_E_T_ = ' '"

				cAliasQry := GetNextAlias()

				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQry,.F.,.T.)

				If (cAliasQry)->CODIGO > 0
					Help(" ",1,"NODELETA")
					lRetorno := .F.
				EndIf

				(cAliasQry)->(dbCloseArea())
			EndIf

			For nX := 1 To Len(aFilial)
				cFilAnt := aFilial[nX]

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Funcao Especifica NG INFORMATICA                           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lRetorno .And. lNGVALSX9
					lRetorno := NGVALSX9("SA2",{"TMD","TN3","TNF"},.T.)
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ponto de entrada de validacao antes de executar a transacao  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lRetorno .And. nModulo == 72
					lRetorno := KEXF010()
					If Valtype(lRetorno) <> "L"
						lRetorno := .T.
					EndIf
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	          	//³ Chamada de função para validação nos módulos SIGAEIC/SIGAESS     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	   			If lRetorno .AND. (nModulo == 17 .OR. nModulo == 85)
				   lRetorno := EICDelForn()
	   			EndIf

				If lRetorno .And. lA020EOK
					lRetorno := ExecBlock("A020EOK",.F.,.F.)
					If Valtype(lRetorno) <> "L"
						lRetorno := .T.
					EndIf
				EndIf

				If !lRetorno
					Exit
				EndIf
			Next nX
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Funcao Especifica SIGAMDT - NG INFORMATICA                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRetorno
			If FindFunction("MdtValESA2")
				lRetorno := MdtValESA2(SA2->A2_COD+SA2->A2_LOJA)
			EndIF
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verfica se fornecedor esta associado ao cadastro de Documentos Exigidos X Fornecedor  |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cPaisLoc=="BRA"
			If lRetorno
				dbSelectArea("DD1")
				If dbSeek(xFilial("DD1")+SA2->A2_COD)
					lRetorno := .F.
					Help(" ",1,"MA020TEMDC")
				EndIf
			EndIf
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Remove a amarracao cod. Externo X cod. Interno - tabela XXF - De/Para                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRetorno .And. FindFunction("CFGA070Mnt") .And. FWXX4Seek(Iif(lMvcM020,"MATA020M","MATA020"))
			If ( XX4->XX4_SENDER == '1' )
				CFGA070Mnt(,"SA2",,SA2->(A2_COD+A2_LOJA),.T.)
			EndIf
		EndIf

		If lHistFiscal .And. lRetorno
		   aCmps :=  RetCmps("SA2",bCampoSA2)
		EndIf

		cFilAnt := cBckFil
EndCase


RestArea(aAreaSM0)
RestArea(aAreaSA5)
RestArea(aArea)
Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³fAvalSA2  ³ Autor ³Eduardo Riera          ³ Data ³11.09.2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Complementa a atualizacao da tabela de fornecedores         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fAvalSA2(ExpN1)                                        	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Opcao de avaliacao                                   ³±±
±±³          ³       [1] Inclusao                                         ³±±
±±³          ³       [2] Alteracao                                        ³±±
±±³          ³       [3] Exclusao                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: .T. se o fornecedor posicionado pode ser deletado    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA020                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function fAvalSA2(nOpcA)

Local aArea      := GetArea("SA2")
Local aAreaSM0   := SM0->(GetArea())
Local aFilial    := {}
Local cBckFil    := cFilAnt
Local nX         := 0
Local aAreaTQF   := {}
Local lHistTab   := GetNewPar("MV_HISTTAB", .F.)
Local lIntGFE    := SuperGetMv('MV_INTGFE',,.F.)
Local cFilialAIF := xFilial("AIF")
Local cFilialSA2 := xFilial("SA2")
Local dDataAlt
Local cHoraAlt
Local cAliasSXI := GetNextAlias()
Local cQuery	:= ""
Local cEventID  := "036" //Inclusao de cliente

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Tratamento para e-Commerce      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lECommerce := SuperGetMV("MV_LJECOMM",.F.,.F.) .And. GetRpoRelease("R5")

lConfBco	:= If(Type("lConfBco") != "L",.F.,lConfBco) // Confirmacao da Dialog de amarracao fornecedor x bancos (Localizados) - FIL

Do Case
	Case nOpcA == 1
		If ExistBlock("M020INC")
			ExecBlock("M020INC",.F.,.F.)
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Envia e-mail ref. Inclusao de Fornecedor  - 036    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SXI")
		cQuery   := "SELECT COUNT(*) AS NREG "
		cQuery   += "FROM SXI SXI "
		cQuery   += "WHERE SXI.XI_EVENTID='"+cEventID+"' AND "
		cQuery   += "SXI.D_E_L_E_T_= ' ' "
		cQuery   := ChangeQuery(cQuery)

		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSXI)

		dbSelectArea(cAliasSXI)

		If (cAliasSXI)->NREG > 0 //Utiliza EventViewer
			cMessagem := "Incluído Fornecedor. Código"+"/"+"Loja"+": "+M->A2_COD+"/"+M->A2_LOJA+CHR(13)+CHR(10)+"Razão Social"+": "+M->A2_NOME+CHR(13)+CHR(10)+"Incluído no sistema pelo usuário"+": "+Subs(cUsuario,7,15)+"."
			EventInsert(FW_EV_CHANEL_ENVIRONMENT, FW_EV_CATEGORY_MODULES, cEventID,FW_EV_LEVEL_INFO,""/*cCargo*/,"Inclusão de Fornecedor",cMessagem,.T./*lPublic*/)
		Else //Utiliza M-Messenger
			MEnviaMail(cEventID,{M->A2_FILIAL,M->A2_COD,M->A2_LOJA,M->A2_NOME,M->A2_NREDUZ,CUSERNAME})
		Endif

		(cAliasSXI)->(dbCloseArea())
	Case nOpcA == 2
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Gravar o historico das alteracoes realizadas pelo usuario    ³
		//³na tabela AIF usando o vetor aCpoAltSA2 que foi carregado na ³
		//³funcao A020TudoOk().                                         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lHistTab .And. Len(aCpoAltSA2) > 0
			dDataAlt := Date()
			cHoraAlt := Time()
			For nX := 1 To Len(aCpoAltSA2)
				MSGrvHist(cFilialAIF,;			// Filial de AIF
				          cFilialSA2,;			// Filial da tabela SA2
				          "SA2",;				// Tabela SA2
				          SA2->A2_COD,;			// Codigo do cliente
				          SA2->A2_LOJA,;		// Loja do cliente
				          aCpoAltSA2[nX][1],;	// Campo alterado
				          aCpoAltSA2[nX][2],;	// Conteudo antes da alteracao
				          dDataAlt,;			// Data da alteracao
				          cHoraAlt)				// Hora da alteracao
			Next nX
			aCpoAltSA2 := {} // limpar o vetor
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Altera descricao da Amarracao Produto x Fornecedor           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Empty(xFilial("SA2"))
			dbSelectArea("SM0")
			MsSeek(cEmpAnt)
			While ! Eof() .And. SM0->M0_CODIGO == cEmpAnt
				Aadd(aFilial,FWGETCODFILIAL)
				dbSkip()
			EndDo
		Else
			Aadd(aFilial,cFilAnt)
		EndIf
		RestArea(aAreaSM0)
		For nX := 1 To Len(aFilial)
			cFilAnt := aFilial[nX]
			If mv_par01 == 1
				If SA5->(FieldPos("A5_NOMEFOR")) > 0
					If !Empty(xFilial("SA5")) .Or. cFilAnt == cBckFil
						dbSelectArea("SA5")
						dbSetOrder(1)
						MsSeek( xFilial("SA5")+SA2->A2_COD+SA2->A2_LOJA)
						While !Eof() .And. SA5->A5_FILIAL == xFilial("SA5") .And.;
							SA5->A5_FORNECE == SA2->A2_COD .And.;
							SA5->A5_LOJA == SA2->A2_LOJA

							RecLock("SA5",.F.)
							SA5->A5_NOMEFOR := SA2->A2_NOME
							MsUnLock()

							dbSelectArea("SA5")
							dbSkip()
						EndDo
					EndIf
				EndIf

				If !Empty(xFilial("SAD")) .Or. cFilAnt == cBckFil
					dbSelectArea("SAD")
					dbSetOrder(1)
					MsSeek( xFilial("SAD")+SA2->A2_COD+SA2->A2_LOJA)
					While !Eof() .And. SAD->AD_FILIAL == xFilial("SAD") .And.;
						SAD->AD_FORNECE == SA2->A2_COD .And.;
						SAD->AD_LOJA == SA2->A2_LOJA

						RecLock("SAD",.F.)
						SAD->AD_NOMEFOR := SA2->A2_NOME
						MsUnLock()

						dbSelectArea("SAD")
						dbSkip()
					EndDo
				EndIf
			EndIf
		Next nX

		aAreaTQF := GetArea()
		//Replica as alterações para a tabela TQF (Postos de Combustiveis)
		If FindFunction("NGCADICBASE") .And. NGCADICBASE('TQF_CODIGO','D','TQF',.F.)
			dbSelectArea("TQF")
			dbSetOrder(01)
			If dbSeek(xFilial("TQF")+SA2->A2_COD+SA2->A2_LOJA)
			   RecLock("TQF",.F.)
			   TQF->TQF_NREDUZ := M->A2_NREDUZ
			   TQF->TQF_BAIRRO := M->A2_BAIRRO
			   TQF->TQF_CIDADE := M->A2_MUN
			   TQF->TQF_ESTADO := M->A2_EST
			   TQF->TQF_CONTFN := MATAFN()
			   TQF->TQF_CNPJ   := SA2->A2_CGC
			   MsUnLock("TQF")
			EndIf
		EndIf
		RestArea(aAreaTQF)

		If lHistFiscal .And. !Inclui .And. Len(aCmps)>0
			GrvHistFis("SA2", "SS3", aCmps)
			aCmps := {}
		EndIf

		If ExistBlock("M020ALT")
			ExecBlock("M020ALT",.F.,.F.,{cBckFil} )
		EndIf
	Case nOpcA == 3
		If Empty(xFilial("SA2"))
			dbSelectArea("SM0")
			MsSeek(cEmpAnt)
			While ! Eof() .And. SM0->M0_CODIGO == cEmpAnt
				Aadd(aFilial,FWGETCODFILIAL)
				dbSkip()
			EndDo
		Else
			Aadd(aFilial,cFilAnt)
		EndIf
		RestArea(aAreaSM0)
		For nX := 1 To Len(aFilial)
			cFilAnt := aFilial[nX]
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Apaga tambem do SA5 -> amarracao produto x fornecedor        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Empty(xFilial("SA5")) .Or. cFilAnt == cBckFil
				dbSelectArea("SA5")
				dbSetOrder(1)
				MsSeek(xFilial("SA5")+SA2->A2_COD+SA2->A2_LOJA)
				While !Eof() .And. SA5->A5_FILIAL == xFilial("SA5") .And.;
					SA5->A5_FORNECE == SA2->A2_COD .And.;
					SA5->A5_LOJA == SA2->A2_LOJA

					RecLock("SA5",.F.)
					dbDelete()
					MsUnLock()

					dbSelectArea("SA5")
					dbSkip()
				EndDo
			EndIf
		Next nX

		If lHistFiscal .And. !Inclui .And. Len(aCmps)>0
			GrvHistFis("SA2", "SS3", aCmps)
			aCmps := {}
		EndIf
		GeoSavCoor(xFilial("SA2"),"SA2",SA2->A2_COD+SA2->A2_LOJA,/*cLatitude*/,/*cLongitude*/,.F.,.T.)

		// Ponto de Entrada para executar validacoes de usuario para a exclusao de registro
		If ExistBlock("M020EXC")
			ExecBlock("M020EXC",.F.,.F.)
		EndIf

EndCase

cFilAnt := cBckFil
RestArea(aAreaSM0)

//Limpa variavel para exportacao de dados do e-commerce.
If cPaisLoc == "ARG"
	If  lECommerce .And. SA2->(FieldPos("A2_ECDTEX")) > 0
		SA2->A2_ECDTEX := ""
	EndIF
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza tabela FIL -> amarracao fornecedor x bancos (Localizados)   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ChkFile("FIL") .And. Type("aHeadFBco") <> "U" .And. AliasInDic("FIL") .And. !IsInCallStack("A020SXB")
    If lConfBco .And. FIL->(FieldPos("FIL_FILIAL"))>0
		FtBcoGrv(nOpcA)
	EndIf
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Integracao PIMS GRAOS                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpca == 1 .Or. nOpca == 2
	If SuperGetMV("MV_PIMSINT",.F.,.F.) .And. FindFunction("PIMSGeraXML")
		PIMSGeraXML("CustomerVendor",STR0006,"2","SA2") //--## Fornecedores
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
//³Integracao SIGATMS X SIGAGFE	 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

If lIntGFE
	If nOpca == 1
		nOpca := 2
	EndIf
EndIf

If FindFunction("MaEnvEAI")
	MaEnvEAI(,,nOpca+2,"MATA020",{ { "SA2", "MATA020_SA2" , NIL, NIL, NIL, NIL } } )
EndIf
RestArea(aArea)
Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³fVariavel ³ Autor ³Julio C.Guerato        ³ Data ³31.05.2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Atualiza variáveis após a inclusão, alteracao, exclusão     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fVariavel(ExpN1)                                        	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Opcao de avaliacao                                   ³±±
±±³          ³       [1] Inclusao                                         ³±±
±±³          ³       [2] Alteracao                                        ³±±
±±³          ³       [3] Exclusao                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T.														  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA020                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Fvariavel(nOpcA)
	lCGCValido:= .F.
Return (.T.)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A020TudoOk³ Autor ³Fernando Machima       ³ Data ³ 14/07/04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa que faz consistencias apos a digitacao da tela    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum												      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T. / .F. 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA020                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A020TudoOk()

Local lRet       := .T.
Local lHistTab   := GetNewPar("MV_HISTTAB", .F.)
Local lMA020TDOK := ExistBlock("MA020TDOK")
Local lRetBKP    := .T.
Local nX         := 0
Local cTpPessoa  := M->A2_TIPO
Local bCampoSA2  := { |x| Field(x) }
Local lUsaFilTrf := IIF(FindFunction('UsaFilTrf'), UsaFilTrf(), .F.)
Local aAreaSA2   := {}

If Type("lCGCValido") == "U"  // Protecao caso esta funcao seja invocada por outra rotina diferente da Inclusao/Alteracao (F3 por exemplo)
	Private lCGCValido := .F.
EndIf
If Type("aCmps") == "U"
	Private aCmps := {}
EndIf

If cPaisLoc == "GUA" .or. cPaisLoc == "COL"
	lRet  := A020ValDoc()
EndIf

If lRet
	If lIntLox
		If Inclui
			MessageDlg(STR0034)	//"Por favor, realize a inclusao do fornecedor pelo ambiente Logix."
			lRet := .F.
		Endif
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carregar o vetor aCpoAltSA2 com os campos que sofreram  ³
//³alguma alteracao. Somente serao gravados na tabela AIF  ³
//³apos a validacao completa da rotina.                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. !Inclui .And. (lHistTab .And. FindFunction("MSGrvHist") .Or. lHistFiscal)
	aCpoAltSA2 := {}
	dbSelectArea("SA2")
	For nX := 1 to FCount()
		If !(M->&( eVal( bCampoSA2, nX) ) == &( eVal( bCampoSA2, nX) ))
			aAdd( aCpoAltSA2, { eVal( bCampoSA2, nX), &( eVal( bCampoSA2, nX) ) } )
		EndIf
	Next nX
EndIf

If cPaisLoc == "BRA"
	If lRet .And. !Empty(M->A2_CGC) .And. (ValType(lCGCValido)<>"U" .And. !lCGCValido)
		If Empty(cTpPessoa)
			cTpPessoa := IIf(Len(AllTrim(M->A2_CGC))==11, "F", "J")
		EndIf
		lRet := A020CGC(cTpPessoa, M->A2_CGC)
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para a validacao dos dados digitados  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. lMA020TDOK
	lRetBKP := ExecBlock("MA020TDOK",.F.,.F.)
	If VALTYPE(lRetBKP) == "L"
		lRet := lRetBKP
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Utilizado no Modulo PLS para verificar Homonimos	   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. SuperGetMV("MV_PLSHOMO",,.F.)
	If SA2->(FieldPos("A2_MATVID")) >0
		PlsHomoni(M->A2_NOME,M->A2_CGC,M->A2_CONREG,NIL,M->A2_INSCR,M->A2_INSCRM,NIL,"SA2",M->A2_MATVID,Inclui)
	Endif
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Validacao do campo A1_FILTRF.(UPDEST39)                       ³
//³Verificar se a filial informada neste campo existe realmente. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. lUsaFilTrf
	If !Empty(M->A2_FILTRF)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Valida se a filial informada existe realmente                  |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lRet := IIf(FindFunction('MtValidFil'), MtValidFil(cEmpAnt+M->A2_FILTRF), lRet)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verificar se nao existe outro cliente com a mesma filial associada |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRet
			aAreaSA2 := SA2->(GetArea())
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Monta filtro e indice temporario na SA2 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cArqIdx := CriaTrab(,.F.)
			IndRegua("SA2", cArqIdx, "A2_FILIAL+A2_FILTRF") //"Selecionando Registros ..."
			nIndex := RetIndex('SA2')
			#IFNDEF TOP
				dbSetIndex(cArqIdx+OrdBagExt())
			#ENDIF
			dbSetOrder(nIndex+1) // A1_FILIAL+A1_FILTRF
			If dbSeek(xFilial('SA2')+M->A2_FILTRF) .And. (SA2->A2_COD <> M->A2_COD)
				Help("",1,"SAVALFOR",, STR0044+': '+SA2->A2_COD+' - '+STR0045+': '+SA2->A2_LOJA, 4, 11 )
				lRet := .F.
			EndIf
			RetIndex("SA2")
			Ferase( cArqIdx + OrdBagExt() )
			RestArea(aAreaSA2)
		EndIf
	EndIf
EndIf

If lHistFiscal .And. lRet .And. Altera
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se algum campo foi alterado.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
  	 If SA2->(FieldPos("A2_IDHIST"))>0 .And. Len(aCpoAltSA2)>0 .And. lHistFiscal
	   aCmps 		 :=  RetCmps("SA2",bCampoSA2)
		M->A2_IDHIST := IdHistFis()
	EndIf

EndIf

If lRet .AND. nModulo == 85 .AND. (Inclui .OR. Altera) .AND. SuperGetMV("MV_ESS0027",,9) >= 10 .AND. FindFunction("RS400VldNIF") // GFP - 04/07/2016 - Validação SIGAESS
   lRet := RS400VldNIF("SA2")
EndIf

//-- Integracao Protheus x DRP NeoGrid (ALTERACAO)
If lRet .and. ALTERA
   If SA2->(FieldPos("A2_DRPEXP")) > 0
		M->A2_DRPEXP := ""
   Endif
Endif

If cPaisLoc == "COL"
	If !Empty(M->A2_TIPDOC)
		If M->A2_TIPDOC=="31" //Tipo de Documento de Indetificacion NIT
			If EMPTY(M->A2_CGC)
		    	MsgAlert(STR0073) //Se debe indicar el campo NIT del Proveedor
		   		lRet:=.F.
		   EndIf
		    IF !EMPTY(M->A2_PFISICA)
		    	MsgAlert(STR0074)//El campo RG/Ced Ext, debe estara Vacio
		    	lRet:=.F.
		    Endif
		Else
		    If !EMPTY(M->A2_CGC)
		    	MsgAlert(STR0075)//"El campo NIT del Proveedor, debe estara Vacio"
		    	lRet:=.F.
		    EndIf
		    If EMPTY(M->A2_PFISICA)
		    	MsgAlert(STR0076)//Se debe indicar el campo RG/Ced Ext
		    	lRet:=.F.
		    EndIf
		Endif
	EndIf
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A020ValDoc³ Autor ³ Fernando Machima      ³ Data ³ 07.06.04 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Validacao do campo NIT. Nao permitir cadastrar dois fornece-³±±
±±³          ³dores com o mesmo NIT                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A020ValDoc()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum												      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T. / .F. 												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de fornecedores                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A020ValDoc()

Local lRet     := .T.
Local lFound   := .F.
Local cCodForn := Space(TamSX3("A2_COD")[1])
Local cLojForn := Space(TamSX3("A2_LOJA")[1])
Local aArea    := GetArea()

DbSelectArea("SA2")
DbSetOrder(3)
If !Empty(M->A2_CGC) .And. DbSeek(xFilial("SA2")+M->A2_CGC)
	While !Eof() .And. xFilial("SA2")+M->A2_CGC == SA2->A2_FILIAL+SA2->A2_CGC .And. !lFound
		//Desconsiderar se for o proprio fornecedor ou uma de suas filiais
		If M->A2_COD == SA2->A2_COD
			DbSkip()
			Loop
		EndIf
		lFound    := .T.
		lRet      := .F.
		cCodForn  := SA2->A2_COD
		cLojForn  := SA2->A2_LOJA
	End
EndIf

If !lRet
	MsgAlert(STR0051,"A020NIT")
EndIf

RestArea(aArea)

Return (lRet)


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³A020NomFav ³ Autor ³ Rodolfo K. Rosseto   ³ Data ³ 22/03/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Posiciona e restaura o SA2                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpC1 := A020NomFav()                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum												      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpC1 = Nome do favorecido								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA020                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A020NomFav()

Local aAreaSA2  := {}
Local cNomeFav  := ''

If !Inclui
	aAreaSA2 := SA2->(GetArea())
	cNomeFav := Posicione("SA2",1,xFilial("SA2")+SA2->A2_CODFAV+SA2->A2_LOJFAV,"A2_NOME")
	RestArea(aAreaSA2)
EndIf

Return cNomeFav

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A020CGC   ³ Autor ³ Eduardo Riera         ³ Data ³ 17.04.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Validacao do campo A2_CGC.                                  ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Cadastro de clientes                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A020CGC(cTipPes,cCNPJ)

Local aArea       := GetArea()
Local aAreaSA2    := SA2->(GetArea())
Local lRetorno    := .T.
Local cCNPJBase   := ""
Local cMv_ValCNPJ := GetNewPar("MV_VALCNPJ","1")
Local cMv_ValCPF  := GetNewPar("MV_VALCPF","1")
Local cCod        := ""
Local cLoja       := ""
Local nCad        := 0
Local cStr		    := ""

DEFAULT cCNPJ     := &(ReadVar())

If lMvcMata020
	lRetorno := MA020CGC(cTipPes,cCNPJ)
Else

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Valida o tipo de pessoa                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cTipPes == "F" .And. (!(Len(AllTrim(cCNPJ))==11) .OR. Len(Alltrim(Transform( cCNPJ, "@R 999.999.999-99" ))) < 14) .And. (M->A2_INDRUR <> "0" .And. M->A2_EST <> "SP")
		Help(" ",1,"CPFINVALID")
		lRetorno := .F.
	ElseIf cTipPes == "J" .And. (!(Len(AllTrim(cCNPJ))==14) .OR. Len(Alltrim(Transform( cCNPJ, "@R 99.999.999/9999-99" ))) < 18)
		Help(" ",1,"CGC")
		lRetorno := .F.
	EndIf

	If Type("lCGCValido") == "U" // Protecao caso esta funcao seja invocada por outra rotina diferente da Inclusao/Alteracao
		Private lCGCValido := .F.
	EndIf

	If Type("l020Auto") == "U" // Protecao caso esta funcao seja invocada por outra rotina diferente da Inclusao/Alteracao
		Private l020Auto := .F.
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Valida a duplicidade do CGC                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. Pcount() > 1
		If cTipPes == "J"  // Validação pessoa juridica

		    //Verifica quantidade de Fornecedores cadastrados com o mesmo código e obtém o 1a código
		    //de cadastro diferente do fornecedor que está sendo alterado ou incluído
			dbSelectArea("SA2")
			dbSetOrder(3)
			dbSeek(xFilial("SA2")+cCNPJ)
			Do While !Eof() .And. SA2->A2_FILIAL == xFilial("SA2") .AND. SA2->A2_CGC == cCNPJ
			    If (M->A2_COD+M->A2_LOJA <> SA2->A2_COD+SA2->A2_LOJA) .And. Empty(cCod)
			    	 cCod:=SA2->A2_COD
			    	 cLoja:=SA2->A2_LOJA
			    EndIf
		    	nCad++
				DbSkip()
			EndDo

			If nCad>0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³O parametro MV_VALCNPJ verifica se a validacao do CNPJ deve ser feita:                            ³
				//³1 = informando ao usuario que ja existe o CNPJ na base e verificando se deseja incluir mesmo assim³
				//³2 = nao permitindo que o usuario insira o mesmo CNPJ                                              ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !Empty(cCod)
				    //Posiciona no código de fornecedor
					dbSelectArea("SA2")
					dbSetOrder(1)
					dbSeek(xFilial("SA2")+cCod+cLoja)
					If cMv_ValCNPJ == "1"
						If !l020Auto
							If Aviso(STR0011,STR0025+SA2->A2_COD+"/"+SA2->A2_LOJA+" - "+SA2->A2_NOME+" - "+AllTrim(RetTitle("A2_INSCR"))+": "+SA2->A2_INSCR,{STR0027,STR0028},2)<>1//"Atenção"###"O CNPJ informado já foi utilizado no fornecedor "###"Aceitar"###"Cancelar"
								lRetorno := .F.
								lCGCValido := .F.
							Else
								lCGCValido := .T. // Indica que ja validou o CNPJ e nao devera validar novamente na confirmacao da inclusao
							EndIf
						EndIf
					Else
						If !l020Auto
							Aviso(STR0011,STR0025+SA2->A2_COD+"/"+SA2->A2_LOJA+" - "+SA2->A2_NOME+".",{"Ok"})//"Atenção"###"O CNPJ informado já foi utilizado no fornecedor "###
							lRetorno := .F.
						Else
							Help(" ",1,"CGCJAINF",,STR0025+SA2->A2_COD+"/"+SA2->A2_LOJA+" - "+SA2->A2_NOME+".",5,0)
							lRetorno := .F.
						EndIf
					Endif
				EndIf
			 ElseIf lRetorno
				cCNPJBase := SubStr(cCNPJ,1,8)
				dbSelectArea("SA2")
				dbSetOrder(3)
				If dbSeek(xFilial("SA2")+cCNPJBase) .And. M->A2_COD+M->A2_LOJA <> SA2->A2_COD+SA2->A2_LOJA
					If cMv_ValCNPJ == "1" .And. SA2->A2_TIPO == "J"
						If !l020Auto
							If Aviso(STR0011,STR0035+" "+SA2->A2_COD+"/"+SA2->A2_LOJA+" - "+SA2->A2_NOME+".",{STR0027,STR0028},2)<>1//"Atenção"###"A base do CNPJ informado já foi utilizada no fornecedor "###"Aceitar"###"Cancelar"
								lRetorno := .F.
								lCGCValido := .F.
							Else
								lCGCValido := .T. // Indica que ja validou o CNPJ e nao devera validar novamente na confirmacao da inclusao
							EndIf
						Else
							lCGCValido := .T. // Indica que ja validou o CNPJ e nao devera validar novamente na confirmacao da inclusao
						EndIf
					Endif
				EndIf
			EndIf
		Else
			dbSelectArea("SA2")
			dbSetOrder(3)
			If dbSeek(xFilial("SA2")+cCNPJ) .And. M->A2_COD+M->A2_LOJA <> SA2->A2_COD+SA2->A2_LOJA
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³O parametro MV_VALCPF verifica se a validacao do CPF deve ser feita:                             ³
				//³1 = informando ao usuario que ja existe o CPF na base e verificando se deseja incluir mesmo assim³
				//³2 = nao permitindo que o usuario insira o mesmo CPF                                              ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SA2->A2_INDRUR <> "0" .And. SA2->A2_EST == "SP" .And. SA2->A2_TIPO == "F"
					cStr := STR0025 // O CNPJ informado já foi utilizado no fornecedor
				Else
					cStr := STR0026 // O CPF informado já foi utilizado no fornecedor
				EndIf
				If cMv_ValCPF == "1"
					If !l020Auto
						If Aviso(STR0011,cStr+SA2->A2_COD+"/"+SA2->A2_LOJA+" - "+SA2->A2_NOME+".",{STR0027,STR0028},2)<>1//"Atenéˆ¬o"###"O CPF informado jãƒ»foi utilizado fornecedor "###"Aceitar"###"Cancelar"
							lRetorno := .F.
							lCGCValido := .F.
						Else
							lCGCValido := .T. // Indica que ja validou o CNPJ e nao devera validar novamente na confirmacao da inclusao
						EndIf
					Else
						lCGCValido := .T. // Indica que ja validou o CNPJ e nao devera validar novamente na confirmacao da inclusao
					EndIf
				Else
					If !l020Auto
						Aviso(STR0011,cStr+SA2->A2_COD+"/"+SA2->A2_LOJA+" - "+SA2->A2_NOME+".",{"Ok"})//"Atenéˆ¬o"###"O CPF informado jãƒ»foi utilizado no fornecedor "###
						lRetorno := .F.
					Else
						Help(" ",1,"CGCJAINF",,cStr+SA2->A2_COD+"/"+SA2->A2_LOJA+" - "+SA2->A2_NOME+".",5,0)
						lRetorno := .F.
					EndIf
				Endif
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Avalia o site da Receita Federal - Mashups                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. GetNewPar("MV_MASHUPS",.F.) .And. !_SetAutoMode()
		RFMashups(M->A2_CGC,{"M->A2_NOME","M->A2_NREDUZ","M->A2_END","M->A2_CEP","M->A2_BAIRRO","M->A2_MUN","M->A2_EST"})
	EndIf

	if lRetorno .AND. cTipPes == "J"
		if Len(Alltrim(Transform( M->A2_CGC, "@R 99.999.999/9999-99" ))) < 18
			Help(" ",1,"CPFINVALID")
			lRetorno := .F.
		endif
	endif

EndIf

RestArea(aAreaSA2)
RestArea(aArea)
Return lRetorno

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³A020Cep   ³ Autor ³ Eduardo Riera         ³ Data ³30.11.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao dos dados fornecidos pelos correios             ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: CEP                                                  ³±±
±±³          ³ExpA2: Array com os dados que serao preenchidos             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A020Cep(cTipo)

DEFAULT cTipo := ""
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Avalia o site dos correios - Mashups                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If GetNewPar("MV_MASHUPS",.F.) .And. !_SetAutoMode()
	Do Case
		Case cTipo == "E"
			CepMashups(M->A2_CEPE,{"M->A2_ENDENT","M->A2_BAIRROE","M->A2_MUNE","M->A2_ESTE"})
		Case cTipo == "C"
			CepMashups(M->A2_CEPC,{"M->A2_ENDCOB","M->A2_BAIRROC","M->A2_MUNC","M->A2_ESTC"})
		OtherWise
			CepMashups(M->A2_CEP,{"M->A2_END","M->A2_BAIRRO","M->A2_MUN","M->A2_EST"})
	EndCase
EndIf
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MTA020AtOp ³ Autor ³ Vitor Raspa          ³ Data ³ 06.Dez.06³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Atualiza os dados do Fornecedor no cadastro da Operadora   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MTA020AtOp()                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MTA020AtOp()
Local aCodigos   := {}
Local nOpcao     := 0
Local oDlg
Private cCodOpe  := CriaVar('DEG->DEG_CODOPE',.F.)
Private cNomOpe  := CriaVar('DEG->DEG_NOMOPE',.F.)

DEFINE MSDIALOG oDlg FROM 00,00 TO 090,350 PIXEL TITLE STR0030 //-- 'Atualiza Dados na Operadora'

@ 011,005 SAY RetTitle('DEG_CODOPE') SIZE 100,15 COLOR CLR_HBLUE PIXEL
@ 010,045 MSGET cCodOpe  F3 "DEG" PICTURE  PesqPict("DEG","DEG_CODOPE") SIZE 6,9  ;
			VALID TMSValField(,.T.,'DEG_NOMOPE') .And. TMSValField(,.F.,'cNomOpe') PIXEL
@ 010,070 MSGET cNomOpe WHEN .F. SIZE 100,9 PIXEL
DEFINE SBUTTON FROM 30,115 TYPE 1 OF oDlg ENABLE ACTION (nOpcao := 1,oDlg:End())
DEFINE SBUTTON FROM 30,145 TYPE 2 OF oDlg ENABLE ACTION (nOpcao := 0,oDlg:End())

ACTIVATE MSDIALOG oDlg CENTERED

If nOpcao == 1
	AAdd( aCodigos, {SA2->(A2_COD+A2_LOJA),'','','',''} )
	CursorWait()
	MsgRun( STR0031,; //-- "Atualizando dados junto a Operadora"
			STR0032,; //-- "Aguarde..."
			{|| TMSAtualOp( cCodOpe, '5', aCodigos, .T. ) } )
	CursorArrow()
EndIf

Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³A020WizFac³ Autor ³ Gustavo G. Rueda      ³ Data ³27/11/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada da rotina que permite uma manutencao facil no      ³±±
±±³          ³ cadastro.                                                  ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T.                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A020WizFac()
Local	cCmps		:=	""
Local	aPar  		:=	{}
Local	cMVA020FAC	:=	GetNewPar("MV_A020FAC","")

cCmps	:=	"A2_BAIRRO/A2_MUN/A2_EST/A2_ESTADO/A2_CEP/A2_TIPO/A2_NATUREZ/A2_TRANSP/A2_PRIOR/A2_RISCO/"
cCmps	+=	"A2_COND/A2_CONTA/A2_TIPORUR/A2_RECISS/A2_PAIS/A2_PAISDES/A2_GRUPO/A2_ATIVIDA/A2_VINCULA/A2_EMAIL/A2_HPAGE/A2_CODMUN/"
cCmps	+=	"A2_RECINSS/A2_TPISSRS/A2_CODLOC/A2_CODPAIS/A2_TPESSOA/A2_GRPTRIB/A2_CONTAB/A2_PAISORI/A2_CNAE/A2_CIVIL/A2_COD_MUN/"
cCmps	+=	"A2_MSBLQL/A2_TIPAWB/A2_DTPAWB/A2_RECSEST/A2_RECPIS/A2_RECCOFI/A2_RECCSLL/A2_CALCIRF/A2_VINCULO/A2_DTINIV/A2_DTFIMV/"
cCmps	+=	"A2_RECFET/A2_CODINSS/A2_CTARE/A2_IBGE/A2_FRETISS/"
cCmps	+=	cMVA020FAC

aAdd(aPar,{"SA2","A2_COD+' - '+A2_NOME", cCmps, ""})

MATA984(aPar[1,1],aPar[1,2],aPar[1,3],,aPar[1,4])

Return .T.


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATAFN   ³ Autor ³ NG Informatica - Ltda ³ Data ³14/12/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Campo telefone c/DDD e Fone do SA2                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Tabelas   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA020                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Telefone com DDD                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador          ³ Data   ³ F.O  ³  Motivo da Alteracao            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Evaldo Cevinscki Jr. ³14/12/06³      ³ Criacao da Funcao               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MATAFN()
Local cTel := ""
Local n := 0
Local nTam := 0

cTel := AllTrim(M->A2_DDD+M->A2_TEL)

n := AT("-",cTel)
If n > 0
	cTel := SubStr(cTel,1,n-1)+SubStr(cTel,n+1,Len(cTel))
EndIf

nTam := Len(AllTrim(cTel))
If SubStr(cTel,1,1) == "0"
   cTel := SubStr(cTel,2,nTam)
EndIf
If nTam <= 8
  	cTel := "xx"+cTel
EndIf

Return cTel
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A120SXB   | Autor ³Aline Sebrian          ³ Data ³ 20/06/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Inclusão de Fornecedores através da tecla F3.               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A020SXB()
Local lIntUnqCod 	:= FindFunction("MATA020B") .And. FwHasEAI("MATA020B")
Local aParam    	:= {{|| .T.},{|nOpc| fCanAvalSA2(nOpc-2)},{|nOpc| fAvalSa2(nOpc-2)},{|| .T.}}
Local lRet		  	:= .T.

Private lIntLox := GetMV("MV_QALOGIX") == "1"

If lMvcMata020
	MA020SXB()
Else
	Begin Transaction
		nOpcA := AxInclui("SA2",1,Nil,/*aAcho*/,/*cFunc*/,/*aCpos*/,"A020TudoOk()",.T.,/*cTransact*/,/*aButtons*/,aParam)

		//-- CustomerVendor
		If nOpcA == 1 .And. lIntegDef
			RegToMemory("SA2", .F. )
			lRet := A020INTF()

			If !lRet
				//-- Exclusão CustomerVendorReservID
				If lIntUnqCod
					lIncluiBkp	:= INCLUI
					lAlteraBkp	:= ALTERA

					INCLUI	:= .F.
					ALTERA	:= .F.

					MATA020B(.T.,M->A2_COD,"MATA020", .F. , .T. , .F. )

					INCLUI	:= lIncluiBkp
					ALTERA	:= lAlteraBkp
				EndIf

				DisarmTransaction()
				lRet := .F.
				Break
			Else
				//-- Inclusão CustomerVendorReservID
				If lIntUnqCod
					lRet	:= MATA020B(.T.,SA2->A2_COD,"MATA020", .F. , .T. , .F. )
					If !lRet
						DisarmTransaction()
						lRet := .F.
						Break
					EndIf
				EndIf
			EndIf
		Else
			//-- EXCLUSÃO DA RESERVEID
			If lIntegDef .And. lIntUnqCod
				lIncluiBkp	:= INCLUI
				lAlteraBkp	:= ALTERA

				INCLUI	:= .F.
				ALTERA	:= .F.

				MATA020B(.T.,,"MATA020",.F.,.T.,.T.)

				INCLUI	:= lIncluiBkp
				ALTERA	:= lAlteraBkp
			EndIf

		EndIf
	End Transaction
EndIf

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³FtBanco   ³ Autor ³ Cristiano Silva       ³ Data ³17/11/2009  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Amarracao Fornecedores (Proveedores) x Bancos                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 -> Alias                                               ³±±
±±³          ³ ExpN1 -> Registro                                            ³±±
±±³          ³ ExpN2 -> Opcao (Inclusao, Alteracao, Exclusao)               ³±±
±±³          ³ ExpN3 -> Array                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function FtBanco( cAlias, nReg, nOpc, APreCols)

Local aArea        := GetArea()
Local aPosObj      := {}
Local aObjects     := {}
Local aSize        := MsAdvSize( .F. )
Local aGet         := {}
Local aTravas      := {}
Local aEntidade    := {}
Local aChave       := {}
//Backup aCols and aHeader
Local aColsBkp     := If(Type("aCols") != "A",{},aCols)
Local aHeaderBkp   := If(Type("aHeader") != "A",{},aHeader)

Local cNomeFor     := ""
Local cCnpjFor     := ""
Local cEntidade    := ""
Local cUnico       := ""

Local lGravou      := .F.
Local lTravas      := .T.

Local nCntFor      := 0
Local nOpcA        := 0
Local nScan        := 0

Local oDlg

Local oGet
Local oGet2

Local	cSeek     := ""

PRIVATE oGetD
PRIVATE aRecFIL     := {}

DEFAULT aPreCols   := {}
DEFAULT nOpc       := 2
DEFAULT cAlias	   := "SA2"

aCols	 := If(Type("aColsFBco") != "A",{},aColsFBco)
aHeader  := If(Type("aHeadFBco") != "A",{},aHeadFBco)
lConfBco := If(Type("lConfBco") != "L",.F.,lConfBco) // Confirmacao da Dialog de amarracao fornecedor x bancos (Localizados) - FIL

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona a entidade                                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Inclui
	nOpc := 3
ElseIf Altera
	nOpc := 4
Endif

cEntidade := cAlias
dbSelectArea( cEntidade )
MsGoto( nReg )

cCodFor	:= M->A2_COD
cCodLoj	:= M->A2_LOJA
cNomeFor	:= M->A2_NOME
cCnpjFor	:= M->A2_CGC

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem do aHeader e aCols                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("FIL")
cSeek  := xFilial( "FIL" ) + cCodFor + cCodLoj
MntGet( "FIL", cSeek )

If ( lTravas )
	IF nOpc = 3
		INCLUI := .T.
	EndIf

	AAdd( aObjects, { 100,  44, .T., .F. } )
	AAdd( aObjects, { 100, 100, .T., .T. } )

	aInfo   := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 2 }
	aPosObj := MsObjSize( aInfo, aObjects )

	DEFINE MSDIALOG oDlg TITLE cCadastro FROM aSize[7],00 TO aSize[6],aSize[5] OF oMainWnd PIXEL

	@ 019,006 SAY OemToAnsi(STR0044) SIZE 040,009 OF oDlg PIXEL //"Codigo"
	@ 032,005 GET oGet VAR cCodFor SIZE 030,009 OF oDlg PIXEL WHEN .F.

	@ 019,056 SAY OemToAnsi(STR0045) SIZE 040,009 OF oDlg PIXEL //"Loja"
	@ 032,055 GET oGet2 VAR cCodLoj SIZE 010,009 OF oDlg PIXEL WHEN .F.

	@ 019,076 SAY OemToAnsi(STR0046) SIZE 040,009 OF oDlg PIXEL //"Nome"
	@ 032,075 GET oGet2 VAR cNomeFor SIZE 220,009 OF oDlg PIXEL WHEN .F.

	@ 019,296 SAY OemToAnsi(STR0047) SIZE 040,009 OF oDlg PIXEL //"CNPJ/CPF"
	@ 032,295 GET oGet2 VAR cCnpjFor SIZE 120,009 OF oDlg PIXEL WHEN .F.

	oGetd:=MsGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4], nOpc,"FtBcoLOK","FtBcoTOK",,.T.,NIL,NIL,NIL,500)

	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||nOpcA:=1,lConfBco:=.T.,If(oGetd:TudoOk(),oDlg:End(),(nOpcA:=0,lConfBco:=.F.))},{||oDlg:End(),lConfBco:=.F.})

	If ( nOpcA == 1 )
		lGravou := FtGrvSA2(aCols)
	EndIf
EndIf
RestArea( aArea )

//Restore aCols and aHeader
aColsFBco := aCols
aHeadFBco := aHeader

aCols	:= aColsBkp
aHeader := aHeaderBkp

Return(lGravou)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Program   ³FtBcoLOK  ³ Autor ³ Cristiano Silva       ³ Data ³17/11/2009  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Validacao da linha da amarracao.                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpL1 := FtBcoLOK()                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1 -> Validacao .T. ou .F.                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function FtBcoLOK()

Local lRet    := .T.
Local nPosCod := GDFieldPos( "FIL_BANCO" )
Local nPosAge := GDFieldPos( "FIL_AGENCI" )
Local nPosCon  := GDFieldPos( "FIL_CONTA" )
Local nPosTip := GDFieldPos( "FIL_TIPO" )
Local nPosForeig := GDFieldPos( "FIL_FOREIG" )
Local nPosACType := GDFieldPos( "FIL_TIPO" )
Local nLoop   := 0
Local lPrinc  := .T.

If !GDDeleted()

	If Empty( GDFieldGet( "FIL_BANCO" ) )
		Help(" ",1,"MA020NOBANK")//It is mandatory to fill the field Bank code.
		lRet := .F.
	EndIf

	If cPaisLoc == "RUS"
		If lRet .And.  Empty( GDFieldGet( "FIL_CONTA" ) )
			Help(" ",1,"MA020NOACCOUNT")//It is mandatory to fill the field Account number.
			lRet := .F.
		EndIf

		If GDFieldGet( "FIL_FOREIG" ) == '2'
			If lRet .And. Empty( GDFieldGet( "FIL_AGENCI" ) )
				Help(" ",1,"MA020NOAGENCY")//It is mandatory to fill the field Agency/BIK code.
				lRet := .F.
			EndIf
		Endif
	Endif

	If lRet
		For nLoop := 1 To Len( aCols )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe banco/agencia/conta duplicados                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nLoop <> n .And. !GDDeleted( nLoop )
				If aCols[ nLoop, nPosCod ] == GDFieldGet( "FIL_BANCO" ) .And. aCols[ nLoop, nPosAge ] == GDFieldGet( "FIL_AGENCI" );
					.And. aCols[ nLoop, nPosCon ] == GDFieldGet( "FIL_CONTA" )
					lRet := .F.
					Help( "", 1, "BCCONDUP","",STR0039,1,0 )
				EndIf
				//Verify if there is another accout already set as Main
				If cPaisLoc == "RUS"
					If GDFieldGet( "FIL_TIPO" ) == "1"
						If aCols[ nLoop, nPosACType ] == "1"
							Help(" ",1,"MA020MAIN")//This supplier has already a Main Account!
							lRet := .F.
						Endif
					Endif
				Endif
			EndIf
		Next nLoop
	EndIf
	If cPaisLoc == "RUS"
		If lRet
			If GDFieldGet( "FIL_TIPO" ) == "1"
				If !Empty(GDFieldGet( "FIL_CLOSED" )) .And. GDFieldGet( "FIL_CLOSED" ) == "1"
					Help(" ",1,"MA020BLKMAIN") //It is not possible to block a Main Account or set as main a blocked account.
					lRet := .F.
				Endif
			Endif
		Endif
	Endif
EndIf

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Program   ³FtBcoTOK  ³ Autor ³ Cristiano Silva       ³ Data ³17/11/2009  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Validacao da gravacao          .                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpL1 := FtBcoLOK()                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1 -> Validacao .T. ou .F.                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function FtBcoTOK()
Local lRet	:= .T.
Local nPosTip := GDFieldPos( "FIL_TIPO" )
Local nLoop   := 0
Local nPrinc  := 0
Local nLinDel := 0 // Quantidade de linhas deletadas

For nLoop := 1 To Len( aCols )
	If !GDDeleted( nLoop )
		lRet:= FtBcoLOK()
		If !lRet
			Exit
		Endif

		If aCols[ nLoop, nPosTip ] == "1"
			nPrinc:=nPrinc+1
		Endif
	Else
		nLinDel++
	EndIf
Next nLoop
IF nPrinc > 1
	lRet := .F.
	Help(" ",1, "BCCONTIPO","",STR0040+CRLF+STR0043,1,0 )
ElseIF nPrinc == 0 .And. !( nLinDel == Len( aCols ) )
	lRet := .F.
	Help(" ",1, "BCCONTIPO2","",STR0041+CRLF+STR0042,1,0 )
EndIF

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Program   ³ FtBcoGrv ³ Autor ³ Cristiano Silva       ³ Data ³17/11/20009 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gravacao / Exclusao da amarracao                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpL1 := FtBcoGrv( ExpC1 )                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1 -> .T. ou .F.                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 -> Opcao (Inclusao, Alteracao, Exclusao)               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function FtBcoGrv(nOpc)

Local cSeekFIL  := M->A2_COD+M->A2_LOJA
Local lGravou   := .F.

Local nLoop     := 0
Local nLoop1	  := 0
Local nLoop2    := 0
Local nPosTip	:= 0
Local nPosBco	:= 0
Local nPosAge	:= 0
Local nPosCon	:= 0
Local cQry		 := ""
Local nLn := 0
Local aColsBkp     := If(Type("aCols") != "A",{},aCols)
Local aHeaderBkp   := If(Type("aHeader") != "A",{},aHeader)

aCols	:= If(Type("aColsFBco") != "A",{},aColsFBco)
aHeader := If(Type("aHeadFBco") != "A",{},aHeadFBco)

nPosTip	 := GDFieldPos( "FIL_TIPO" )
nPosBco	 := GDFieldPos( "FIL_BANCO" )
nPosAge	 := GDFieldPos( "FIL_AGENCI" )
nPosCon	 := GDFieldPos( "FIL_CONTA" )

DbSelectArea("FIL")
FIL->(DbSetOrder(1))

If !Empty(cSeekFIL) .And. nPosTip > 0 .And. nPosBco > 0 .And. nPosAge > 0 .And. nPosCon > 0
	If nOpc <> 3
		If !Empty(aCols)
			If Select("FILSA2") > 0
				FILSA2->(DbCloseArea())
			Endif

			cQry := " SELECT Count(*) AS LINHAS,
			cQry += "       R_E_C_N_O_ AS RECNO
			cQry += " FROM " + RetSqlName("FIL")
			cQry += " WHERE  D_E_L_E_T_ = ''
			cQry += "        AND FIL_FORNEC = '" + M->A2_COD + "'"
			cQry += "        AND FIL_LOJA = '" + M->A2_LOJA + "'"
			cQry += "        AND FIL_FILIAL = '" + xFilial("FIL") + "'"
			cQry += " GROUP  BY R_E_C_N_O_ "
			cQry += " ORDER BY R_E_C_N_O_ "

			cQry := ChangeQuery(cQry)

			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQry),"FILSA2",.F.,.T.)

			DbSelectArea("FILSA2")
			If FILSA2->(!EOF())
				nLoop := FILSA2->LINHAS
			Endif

			If nLoop == Len(aCols)
				While FILSA2->(!EOF())
					nLoop1++
					FIL->(DbGoto(FILSA2->RECNO))
					If !GDDeleted( nLoop1 )
						If RecLock("FIL",.F.)
							For nLoop2 := 1 To Len( aHeader )
								If !(AllTrim(aHeader[nLoop2,2]) $ "FIL->FIL_FILIAL|FIL->FIL_FORNEC|FIL->FIL_LOJA")
									FIL->(FieldPut(FieldPos(aHeader[nLoop2,2]),aCols[nLoop1,nLoop2]))
								EndIf
							Next nLoop2
							FIL->(MsUnlock())
						Endif
					Else
						If RecLock("FIL",.F.)
							FIL->(DbDelete())
							FIL->(MsUnlock())
						Endif
					Endif
					FILSA2->(DbSkip())
				Enddo
			Elseif nLoop > Len(aCols)
				While FILSA2->(!EOF())
					nLoop1++

					If nLoop1 > Len(aCols)
						FIL->(DbGoto(FILSA2->RECNO))
						If RecLock("FIL",.F.)
							FIL->(DbDelete())
							FIL->(MsUnlock())
						Endif
					Else
						FIL->(DbGoto(FILSA2->RECNO))
						If !GDDeleted( nLoop1 )
							If RecLock("FIL",.F.)
								For nLoop2 := 1 To Len( aHeader )
									If !(AllTrim(aHeader[nLoop2,2]) $ "FIL->FIL_FILIAL|FIL->FIL_FORNEC|FIL->FIL_LOJA")
										FIL->(FieldPut(FieldPos(aHeader[nLoop2,2]),aCols[nLoop1,nLoop2]))
									EndIf
								Next nLoop2
								FIL->(MsUnlock())
							Endif
						Else
							If RecLock("FIL",.F.)
								FIL->(DbDelete())
								FIL->(MsUnlock())
							Endif
						Endif
					Endif

					FILSA2->(DbSkip())
				Enddo
			Elseif nLoop < Len(aCols)
				While FILSA2->(!EOF())
					nLoop1++
					nLn := Ascan(aColsAux, FILSA2->RECNO)
					FIL->(DbGoto(FILSA2->RECNO))
					If !GDDeleted( nLn )
						If RecLock("FIL",.F.)
							For nLoop2 := 1 To Len( aHeader )
								If !(AllTrim(aHeader[nLoop2,2]) $ "FIL->FIL_FILIAL|FIL->FIL_FORNEC|FIL->FIL_LOJA")
									FIL->(FieldPut(FieldPos(aHeader[nLoop2,2]),aCols[nLn,nLoop2]))
								EndIf
							Next nLoop2
							FIL->(MsUnlock())
						Endif
					Else
						If RecLock("FIL",.F.)
							FIL->(DbDelete())
							FIL->(MsUnlock())
						Endif
					Endif

					FILSA2->(DbSkip())
				Enddo

				If nLoop1 < Len(aCols)
					nLoop1++
					For nLoop := nLoop1 To Len(aCols)
						If !GDDeleted( nLoop )
							If RecLock("FIL",.T.)
								FIL->FIL_FILIAL	:= xFilial( "FIL" )
								FIL->FIL_FORNEC	:= M->A2_COD
								FIL->FIL_LOJA	:= M->A2_LOJA
								For nLoop2 := 1 To Len( aHeader )
									If !(AllTrim(aHeader[nLoop2,2]) $ "FIL->FIL_FILIAL|FIL->FIL_FORNEC|FIL->FIL_LOJA")
										FIL->(FieldPut(FieldPos(aHeader[nLoop2,2]),aCols[nLoop,nLoop2]))
									EndIf
								Next nLoop2
								FIL->(MsUnlock())
							Endif
						Endif
					Next nLoop
				Endif
			Endif

			FILSA2->(DbCloseArea())
		Endif
	Else
		If FIL->(DbSeek(xFilial("FIL")+ cSeekFIL ))
			While FIL->(!EOF())
				If FIL->FIL_FILIAL == xFilial("FIL") .And. FIL->FIL_FORNEC == SA2->A2_COD .And. FIL->FIL_LOJA == SA2->A2_LOJA
					RecLock("FIL",.F.)
					FIL->(DbDelete())
					FIL->(MsUnLock())
				Endif
				FIL->(DbSkip())
			EndDo
		Endif
	Endif
Endif

//Restore aCols and aHeader
aColsFBco := aCols
aHeadFBco := aHeader

aCols	:= aColsBkp
aHeader := aHeaderBkp
aColsAux:= {}

Return( lGravou )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Program   ³ FtGrvSA2 ³ Autor ³ Cristiano Silva       ³ Data ³17/11/20009 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gravacao Banco/Agencia/Conta no Cad. Fornecedor              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpL1 := FtBcoGrv( ExpC1 )                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1 -> Indica se gravou                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 -> aCols                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function FtGrvSA2(aCols)
Local nLoop	:= 0
Local lGravou := .F.
Local nPosBanco	:= aScan(aHeader,{|x| AllTrim(x[2]) == "FIL_BANCO"	})
Local nPosAgenc	:= aScan(aHeader,{|x| AllTrim(x[2]) == "FIL_AGENCI"	})
Local nPosConta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "FIL_CONTA"	})
Local nPosDVAge	:= aScan(aHeader,{|x| AllTrim(x[2]) == "FIL_DVAGE"	})
Local nPosDVCta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "FIL_DVCTA"	})
Local nPosTpCta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "FIL_TIPCTA"	})
Local nPosTipo	:= aScan(aHeader,{|x| AllTrim(x[2]) == "FIL_TIPO"})

For nLoop := 1 To Len( aCols )
	If !Empty( AllTrim(aCols[nLoop][nPosBanco]) ) .AND. (cPaisLoc == "RUS" .Or. !Empty( AllTrim(aCols[nLoop][nPosAgenc]) ));
   		.AND. !Empty( AllTrim(aCols[nLoop][nPosConta]) )

		If !GDDeleted( nLoop )
			If aCols[nLoop][nPosTipo] == "1"
				M->A2_BANCO 	:= aCols[nLoop][nPosBanco]
				M->A2_AGENCIA	:= aCols[nLoop][nPosAgenc]
				M->A2_NUMCON	:= aCols[nLoop][nPosConta]
				If cPaisLoc <> "RUS"
					M->A2_DVAGE	:= aCols[nLoop][nPosDVAge]
					M->A2_DVCTA	:= aCols[nLoop][nPosDVCta]
					M->A2_TIPCTA	:= aCols[nLoop][nPosTpCta]
				EndIf
				lGravou := .T.
			Endif
		Endif
	Endif
Next

Return lGravou

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Program   ³ MntGet   ³ Autor ³ Cristiano Silva       ³ Data ³17/11/20009 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Montagem do aHeader e Acols                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpL1 := MntGet( ExpC1, ExpC2)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³                                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 -> Alias                                               ³±±
±±³          ³ ExpC2 -> Chave                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MntGet(cAlias,cSeek)
Local aAreaAnt := GetArea()
Local aAreaSX3 := SX3->( GetArea() )
Local nx 		 := 0
Local nUsado 	 := 0
Local nPosTip	 := GDFieldPos( "FIL_TIPO" )
Local nPosBco	 := GDFieldPos( "FIL_BANCO" )
Local nPosAge	 := GDFieldPos( "FIL_AGENCI" )
Local nPosCon	 := GDFieldPos( "FIL_CONTA" )
Local cCpoFIL	 := ""
Local nQtdCpos := 0
Local nCtnCpo	 := 0
Local aAux		 := {}
Local aMT020FIL	:= {}
Default cAlias := "FIL"

If cPaisLoc == "RUS"
	cCpoFIL := "FIL_BANCO|FIL_CONTA|FIL_ACNAME|FIL_MOEDA|FIL_AGENCI|FIL_BKNAME|FIL_CORRAC|FIL_CITY|FIL_SWIFT|FIL_NMECOR|FIL_REASON|FIL_FOREIG|FIL_CLOSED|FIL_TIPO"
	nQtdCpos := 14
Else
	cCpoFIL := "FIL_BANCO|FIL_AGENCI|FIL_CONTA|FIL_TIPO|FIL_DETRAC|FIL_MOEDA|FIL_DVAGE|FIL_DVCTA|FIL_TIPCTA|FIL_MOVCTO"
	nQtdCpos := 10
Endif

//Adiciona campos da tabela FIL
If ExistBlock("MT020FIL")
	aMT020FIL := ExecBlock("MT020FIL", .F.,.F.)
	If ValType(aMT020FIL) == 'A' .And. Len("aMT020FIL") >= 2
		cCpoFIL	+= aMT020FIL[1]
		nQtdCpos 	+= aMT020FIL[2]
	EndIf
EndIf

If Altera .OR. (!Altera .and. !Inclui)
	aHeader := {}

	dbSelectArea("SX3")
	SX3->( dbSetOrder(1) )
	SX3->( msSeek(cAlias) )

	nUsado := 0
	While SX3->( !EOF() ) .And. SX3->X3_ARQUIVO == cAlias
		If nUsado < nQtdCpos
			If SX3->X3_USADO != " " .And. Alltrim(SX3->X3_CAMPO) $ cCpoFIL
				nUsado := nUsado + 1
				ctitulo := TRIM(X3Titulo())
				ntamanho := SX3->X3_TAMANHO
				AADD( aHeader, { ctitulo, SX3->X3_CAMPO, SX3->X3_PICTURE,;
				      NTAMANHO, SX3->X3_DECIMAL, SX3->X3_VALID,;
				      SX3->X3_USADO, SX3->X3_TIPO, SX3->X3_ARQUIVO, SX3->X3_VISUAL } )
			EndIf
		Endif
		SX3->( dbSkip() )
	EndDo

	If Empty(aCols)
		dbSelectArea( cAlias )
		FIL->( dbSetOrder(1) )
		If FIL->( msSeek(cSeek) )
			While FIL->( !EOF() ) .And. cSeek == FIL_FILIAL+FIL_FORNEC+FIL_LOJA
				If aScan( aCols, {|x| x[1]+x[2]+x[4] = FIL_BANCO+FIL_AGENCI+FIL_CONTA} ) == 0
					aAux := {}
					For nX:= 1 To Len(aHeader)
						If cPaisLoc == "RUS" .And. aHeader[nX][2] == "FIL_CORRAC"
							aAdd (aAux, Posicione("F45",1,xFilial("F45")+FIL->FIL_AGENCI,"F45_CORRAC") )
						Else
							aAdd (aAux, FIL->(FieldGet(FieldPos(aHeader[nX][2]))) )
						Endif
					Next nX
					aAdd( aAux, .F. )
			    	aAdd( Acols, aAux )
			    	aAdd( aColsAux, FIL->(RECNO()) )
				Endif
				FIL->( dbSkip() )
			EndDo
		Endif
	Endif

ElseIf Inclui
	aHeader := {}

	dbSelectArea("SX3")
	SX3->( dbSetOrder( 1 ) )
	SX3->( msSeek(cAlias) )

	nUsado := 0
	While SX3->( !EOF() ) .And. SX3->X3_ARQUIVO == cAlias
		If nUsado < nQtdCpos
			If SX3->X3_USADO != " " .And. Alltrim(SX3->X3_CAMPO) $ cCpoFIL
				nUsado := nUsado + 1
				ctitulo := TRIM(X3Titulo())
				ntamanho := SX3->X3_TAMANHO
				AADD( aHeader, { ctitulo, SX3->X3_CAMPO, SX3->X3_PICTURE,;
				      NTAMANHO, SX3->X3_DECIMAL, SX3->X3_VALID,;
				      SX3->X3_USADO, SX3->X3_TIPO, SX3->X3_ARQUIVO, SX3->X3_VISUAL } )
			EndIf
		Endif
		SX3->( dbSkip() )
	EndDo


	aAux := {}

	For nX:= 1 To Len(aHeader)
		aAdd (aAux, CriaVar(aHeader[nX][2]))
	Next nX

	If Empty(aCols)
		aAdd( aAux, .F. )
		aAdd( aColsAux, FIL->(RECNO()) )
		AADD( Acols, aAux )
	Endif
Endif

SX3->( RestArea( aAreaSX3 ) )
RestArea( aAreaAnt )
Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A020WebbIcºAutor  ³Marcelo Custodio    º Data ³  22/04/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Permite incluir fornecedor atraves da rotina de reprocessa  º±±
±±º          ³mento da integracao ACC.                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Integracao Compras X ACC.                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A020WebbIc(aFields)
Local aParamSA2	:= {{|| A20WebbVl()},{|nOpc| fCanAvalSA2(nOpc-2)},{|nOpc| fAvalSa2(nOpc-2)},{|| .T.}}

DEFAULT aFields := {}

Private aVlWebbSA2  := aFields
Private lIntLox     := GetMV("MV_QALOGIX") == "1"

If lMvcMata020
	Return MA020WebbIc()
EndIf

Return AxInclui("SA2",1,Nil,,,,"A020TudoOk()",.T.,,,aParamSA2)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A020WebbVlºAutor  ³Marcelo Custodio    º Data ³  22/04/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Preenche os campos pre-configurados na inclusao ACC.        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Integracao Compras X ACC.                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A20WebbVl()
Local nx := 0

For nx:=1 to len(aVlWebbSA2)
	M->&(aVlWebbSA2[nx,1]) := aVlWebbSA2[nx,2]
Next

Return Nil
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³IntegDef  ºAutor  ³ Marcelo C. Coutinho  º Data ³  28/10/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Mensagem Única															    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Mensagem Única                                            	º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function IntegDef( cXml, nTypeTrans, cTypeMessage )

	Local aRet := {}

	aRet:= MATI020( cXml, nTypeTrans, cTypeMessage )

Return aRet

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³HtmlPicPes| Autor ³ Aline S Damasceno  	³ Data ³03/12/12  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna a picture do CGC ou CPF para o Client HTML         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ ExpL1 := PicPes(cTipPes)                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cTipPes - F-Fisica/J-Juridica                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ Client HTML      										  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
Function HTMLPP(cTipPes)
Local cPict := ""
if cTipPes == "F"
	cPict := "@R 99999999999"
else
	cPict := "@R 99999999999999"
endif
cPict := cPict + "%C"
Return cPict

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ A080Hist     ºAutor  ³Wemerson Randolfo     º Data ³ 03/09/12 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Visualizacao do historico das alteracoes                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ Nao ha                                                        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno   ³ .T. ou .F.                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAplicacao ³ Funcao chamada pelo menu                                      º±±
±±º          ³                                                               º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A020Hist()
Local lRet

lRet := HistOperFis("SS3",SA2->A2_COD,SA2->A2_NOME,"S3_COD")
Return lRet

//-----------------------------------------------------
/*/	Validações a confirmação da exclusão
/ author Felipe Machado de Oliveira
/ version P11
/ since 18/04/2013
/*/
//------------------------------------------------------
Function A020DelOk()
Local lRet := .T.

//-- Integração Protheus x GFE (EXCLUSAO)
lRet := MATA020IPG(5)

Return lRet

//-----------------------------------------------------
/*/	Validações a confirmação de inclusão/alteração/exclusão
/ author Felipe Machado de Oliveira
/ version P11
/ since 18/04/2013
/*/
//------------------------------------------------------
Static Function MATA020IPG(nOperation)
Local lRet := .T.
Local lRetIPG := .T.
Static _lMT020IPG := Existblock( 'MATA020IPG' )

//Integração Protheus com SIGAGFE
If cPaisLoc == "BRA"
	If SuperGetMV("MV_INTGFE",.F.,.F.) .And. SuperGetMV("MV_INTGFE2",.F.,"2") $ "1" .And. AliasInDic("GU3")

		If _lMT020IPG
			lRetIPG := ExecBlock( 'MATA020IPG' , .F. , .F. , {nOperation} )
		Endif

		If lRetIPG
			lRet := InterGU3F(nOperation)
		EndIf

	EndIf
EndIf

Return lRet

//-----------------------------------------------------
/*/	Integra a tabela SA2(Protheus) com GU3(SIGAGFE) a cada registro novo
/ author Felipe Machado de Oliveira
/ version P11
/ since 18/04/2013
/*/
//------------------------------------------------------
Static Function InterGU3F(nOperation)
Local lRet 		 :=  .T.
Local oModelGU3F := FWLoadModel("GFEA015")
Local nTipoOpSet := 0
Local cMsg 		 := ""
Local cIdFor	 := ""
Local cRet 		 := "2"
Local lNumProp   := Iif(FindFunction("OMSEMITMP"),OMSEMITMP(),.F.)      //Parametro Numeracao
Local cTransp    := ""
Local lEAICodUnq := Iif(FindFunction("TMSCODUNQ"),TMSCODUNQ(),.F.)      //Codigo Unico
Local lTMSGFE    := TmsIntGFE()

Private N := 1

If cPaisLoc == "BRA"

	If !lNumProp
		cIdFor := RegraIdSA2(nOperation,@lRet,@cMsg)
	ElseIf lEAICodUnq
		cIdFor := Iif(nOperation == 5, SA2->A2_COD, M->A2_COD)
	EndIf

	If lRet
		If !lNumProp .Or. lEAICodUnq
			GU3->(dbSetOrder(1))
			GU3->(dbSeek(xFilial("GU3")+cIdFor))
			If !GU3->(EOF()) .And. GU3->GU3_FILIAL == xFilial("GU3");
						  		.And. AllTrim(GU3->GU3_CDEMIT) == AllTrim(cIdFor);

				oModelGU3F:SetOperation(MODEL_OPERATION_UPDATE)
				nTipoOpSet := MODEL_OPERATION_UPDATE
			Else
				oModelGU3F:SetOperation(MODEL_OPERATION_INSERT)
				nTipoOpSet := MODEL_OPERATION_INSERT
			EndIf
		Else
			If nOperation == MODEL_OPERATION_INSERT .Or. nOperation == MODEL_OPERATION_UPDATE
				cIdFor := OMSM011COD(M->A2_COD,M->A2_LOJA,2,,)
			Else
				cIdFor := OMSM011COD(SA2->A2_COD,SA2->A2_LOJA,2,,)
			EndIf

			If Empty(cIdFor)
				If nOperation == MODEL_OPERATION_INSERT .Or. nOperation == MODEL_OPERATION_UPDATE
					oModelGU3F:SetOperation(MODEL_OPERATION_INSERT)
					nTipoOpSet := MODEL_OPERATION_INSERT
				Elseif nOperation = MODEL_OPERATION_DELETE
					oModelGU3F:SetOperation(MODEL_OPERATION_DELETE)
					nTipoOpSet := MODEL_OPERATION_DELETE
				Endif
			Else
				GU3->(dbSetOrder(1))
				If GU3->(MsSeek(xFilial("GU3")+cIdFor))
					If nOperation = MODEL_OPERATION_UPDATE
						oModelGU3F:SetOperation(MODEL_OPERATION_UPDATE)
						nTipoOpSet := MODEL_OPERATION_UPDATE
					Elseif nOperation = MODEL_OPERATION_DELETE
						oModelGU3F:SetOperation(MODEL_OPERATION_DELETE)
						nTipoOpSet := MODEL_OPERATION_DELETE
					Endif
				Else
					lRet := .F.
				EndIf
			EndIf
		EndIf

		oModelGU3F:Activate()

		If nOperation <> MODEL_OPERATION_DELETE
			oModelGU3F:SetValue('GFEA015_GU3','GU3_NMEMIT',M->A2_NOME)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_NMFAN' ,M->A2_NREDUZ)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_NATUR' ,M->A2_TIPO)
			oModelGU3F:LoadValue('GFEA015_GU3','GU3_FORN'  ,'1')
			oModelGU3F:LoadValue('GFEA015_GU3','GU3_EMFIL',IIF(M->A2_TIPO<>'X',A030CliFil(M->A2_CGC),'2') )
			oModelGU3F:SetValue('GFEA015_GU3','GU3_ENDER' ,M->A2_END)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_COMPL' ,M->A2_COMPLEM)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_BAIRRO',M->A2_BAIRRO)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_CEP'   ,M->A2_CEP)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_NRCID' ,TMS120CDUF(M->A2_EST, '1')+M->A2_COD_MUN)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_NMCID' ,M->A2_MUN)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_UF'    ,M->A2_EST)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_IDFED' ,IIF(M->A2_TIPO <> 'X',M->A2_CGC,''))
			oModelGU3F:SetValue('GFEA015_GU3','GU3_IE'    ,M->A2_INSCR)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_IM'    ,M->A2_INSCRM)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_CXPOS' ,SubStr(M->A2_CX_POST,1,10))
			oModelGU3F:SetValue('GFEA015_GU3','GU3_EMAIL' ,M->A2_EMAIL)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_FONE1' ,SubStr(M->A2_TEL,1,15))
			oModelGU3F:SetValue('GFEA015_GU3','GU3_FAX'   ,M->A2_FAX)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_WSITE' ,M->A2_HPAGE)
			oModelGU3F:SetValue('GFEA015_GU3','GU3_CONICM',M->A2_CONTRIB)

			If M->A2_SIMPNAC == "1"
				oModelGU3F:SetValue('GFEA015_GU3','GU3_TPTRIB' ,"2")
			Elseif M->A2_SIMPNAC == "2"
				oModelGU3F:SetValue('GFEA015_GU3','GU3_TPTRIB' ,"1")
			Endif

			If M->A2_PAGGFE == StrZero(1, Len(SA2->A2_PAGGFE))
				oModelGU3F:LoadValue( 'GFEA015_GU3', 'GU3_TRANSP', If(M->A2_TIPO  == 'J', '1', '2') )
				oModelGU3F:LoadValue( 'GFEA015_GU3', 'GU3_AUTON' , If(M->A2_TIPO == 'F','1','2') )
			EndIf

			If nTipoOpSet == MODEL_OPERATION_UPDATE
				If nOperation == MODEL_OPERATION_INSERT .And. GU3->GU3_SIT <> "1" .And. M->A2_MSBLQL <> "1"
					oModelGU3F:LoadValue('GFEA015_GU3','GU3_SIT',"1")
				EndIf
			Else
				oModelGU3F:SetValue('GFEA015_GU3','GU3_FILIAL', xFilial("SA2") )

				If !lNumProp
					oModelGU3F:SetValue('GFEA015_GU3','GU3_CDEMIT',cIdFor)
				Else
					If lEAICodUnq
						oModelGU3F:SetValue('GFEA015_GU3','GU3_CDEMIT',cIdFor)
					Else
						oModelGU3F:LoadValue('GFEA015_GU3','GU3_CDEMIT',"ZZZZZZZZZ")
					EndIf
					oModelGU3F:SetValue('GFEA015_GU3','GU3_CDERP' ,M->A2_COD)
					oModelGU3F:SetValue('GFEA015_GU3','GU3_CDCERP',M->A2_LOJA)
				EndIf

				oModelGU3F:LoadValue( 'GFEA015_GU3', 'GU3_ORIGEM', "2" )
			EndIf
			If M->A2_MSBLQL == "1"
				If lNumProp
					oModelGU3F:LoadValue( 'GFEA015_GU3', 'GU3_FORN' , '1' )
					oModelGU3F:LoadValue( 'GFEA015_GU3', 'GU3_SIT', '2' )
				Else
					oModelGU3F:LoadValue( 'GFEA015_GU3', 'GU3_FORN' , '2' )
					oModelGU3F:LoadValue( 'GFEA015_GU3', 'GU3_SIT', '2' )
				EndIf
				If nTipoOpSet == MODEL_OPERATION_UPDATE
					If GU3->GU3_CLIEN == "2" .And. GU3->GU3_EMFIL == "2" .And. GU3->GU3_TRANSP == "2" .And. GU3->GU3_AUTON == "2"
						oModelGU3F:LoadValue( 'GFEA015_GU3', 'GU3_SIT', '2' )
					EndIf
				EndIf
			Else
				oModelGU3F:LoadValue( 'GFEA015_GU3', 'GU3_FORN' , '1' )
				oModelGU3F:LoadValue( 'GFEA015_GU3', 'GU3_SIT', '1' )
			EndIf
		Else
			If nTipoOpSet <> MODEL_OPERATION_DELETE
				oModelGU3F:LoadValue( 'GFEA015_GU3', 'GU3_FORN'  , '2' )
				cRet := IIF(GU3->GU3_CLIEN == "2" .And. GU3->GU3_EMFIL == "2" .And. GU3->GU3_TRANSP == "2" .And. GU3->GU3_AUTON == "2" ,"2","1")

				If cRet <> "1"
					oModelGU3F:LoadValue( "GFEA015_GU3", "GU3_SIT", cRet )
				EndIf
			EndIf
		EndIf

		If oModelGU3F:VldData()
			oModelGU3F:CommitData()
		Else
			cMsg := STR0060+CRLF+CRLF+oModelGU3F:GetErrorMessage()[6]//"Inconsistência com o Frete Embarcador (SIGAGFE): "##
			lRet := .F.
		EndIf

		oModelGU3F:Deactivate()

	EndIf

	If !lRet
		Help( ,, STR0011,,cMsg, 1, 0 ) //Atenção
	EndIf
EndIf
Return lRet

//-----------------------------------------------------
/*/	Verifica valores dos campos SA4 e retorna valor correspondente
/ author Felipe Machado de Oliveira
/ version P11
/ since 18/04/2013
/*/
//------------------------------------------------------
Static Function RegraIdSA2(nOperation,lRet,cMsg)
Local cRet := ""

If nOperation == MODEL_OPERATION_INSERT
	If M->A2_TIPO == "X"
		cRet := AllTrim(M->A2_COD) + AllTrim(M->A2_LOJA)
	Else
		If Empty(M->A2_CGC)
			cMsg := STR0054 //"Informe o campo CNPJ/CPF (A2_CGC)."
			lRet := .F.
		Else
			cRet := M->A2_CGC
		EndIf
	EndIf
ElseIf nOperation == MODEL_OPERATION_UPDATE
	If SA2->A2_TIPO == "X"
		If SA2->A2_TIPO <> M->A2_TIPO
			cMsg := STR0055 //"Não é possivel alterar o Tipo para diferente de 'X=Outros'."
			lRet := .F.
		Else
			cRet := AllTrim(SA2->A2_COD)+AllTrim(SA2->A2_LOJA)
		EndIf
	Else
		If M->A2_TIPO == "X"
			cMsg := STR0056 //"Não é possivel alterar o Tipo para 'X=Outros'."
			lRet := .F.
		Else
			If !Empty(SA2->A2_CGC)
				If SA2->A2_CGC <> M->A2_CGC
					cMsg := STR0057 //"CNPJ/CPF não pode ser alterado por servir como chave de identificação no SIGAGFE"
					lRet := .F.
				Else
					cRet := SA2->A2_CGC
				Endif
			Else
				If Empty(M->A2_CGC)
					cMsg := STR0054 //"Informe o campo CNPJ/CPF (A2_CGC)."
					lRet := .F.
				Else
					cRet := SA2->A2_CGC
				EndIf
			EndIf
		EndIf
	EndIf
ElseIf nOperation == MODEL_OPERATION_DELETE
	If SA2->A2_TIPO == "X"
		cRet := AllTrim(SA2->A2_COD) + AllTrim(SA2->A2_LOJA)
	Else
		cRet := SA2->A2_CGC
	EndIf
EndIf

Return cRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Aline Damasceno       ³ Data ³30/09/2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³	  1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef(lNaoCria)

Local nPos       := 0
Local aRotAdic   := {}
Local lPyme      := Iif(Type("__lPyme")  <> "U",__lPyme,.F.)
Local lTMSOPdg   := SuperGetMV('MV_TMSOPDG',,'0') == '2'
Local lMontaOpc  := IIF(Type("lSetMenu") == "L",lSetMenu,.F.)
Local aRotina    := {}
Local aEntRelac  := {}
Local aAtiv      := {}
Local aAnotac    := {}
Default lNaoCria  := .F.

// Nao adicionar no aRotina as opcoes de Pesquisar/Visualizar/Incluir/Alterar/Excluir
// pois o AxCadastro realiza todo o tratamento destes itens internamente. Passar
// apenas os itens complementares que deverao ser adicionados ao Menudef.

If !lNaoCria .And. !lMontaOpc
	aadd(aRotina,{ OemToAnsi(STR0001), "ViewDef.MATA020", 0, 1}) //Pesquisar
	aadd(aRotina,{ OemToAnsi(STR0002), "ViewDef.MATA020", 0, 2}) //Visualizar
	aadd(aRotina,{ OemToAnsi(STR0003), "ViewDef.MATA020", 0, 3}) //Incluir
	aadd(aRotina,{ OemToAnsi(STR0004), "ViewDef.MATA020", 0, 4}) //Alterar
	aadd(aRotina,{ OemToAnsi(STR0005), "ViewDef.MATA020", 0, 5}) //Excluir
Else
	aadd(aRotina,{ STR0001, "AxPesqui"		, 0, 1}) //Pesquisar
	aadd(aRotina,{ STR0002, "A020Visual"	, 0, 2}) //Visualizar
	aadd(aRotina,{ STR0003, "A020Inclui"	, 0, 3}) //Incluir
	aadd(aRotina,{ STR0004, "A020Altera"	, 0, 4}) //Alterar
	aadd(aRotina,{ STR0005, "A020Deleta"	, 0, 5}) //Excluir
EndIf

aAdd(aRotina,{OemtoAnsi(STR0036), "A020WizFac", 0, 4, 2, .F.})	//"Facilitador"
If lTMSOPdg
	aadd(aRotina,{STR0029,"MTA020AtOp()", 0 , 4}) //-- "DadosXOper."
EndIf

aadd(aEntRelac,{ OemToAnsi(STR0013),"FtContato('SA2',SA2->(Recno()),4)" ,0 , 4})  //"Contatos"
aadd(aEntRelac,{ OemToAnsi(STR0016),"MsDocument('SA2',SA2->(Recno()),4)",0 , 4}) //"Conhecimento"

If nModulo == 73

	aEntRelac := CRMXINCROT("SA2",aEntRelac)

	nPos := ASCAN(aEntRelac, { |x| IIF(ValType(x[2]) == "C", x[2] == "CRMA190Con()",Nil) })
	If nPos > 0
		ADD OPTION aRotina TITLE aEntRelac[nPos][1] ACTION aEntRelac[nPos][2] OPERATION 8  ACCESS 0//"Conectar"
		Adel(aEntRelac,nPos)
		Asize(aEntRelac,Len(aEntRelac)-1)
	EndIf

	nPos := ASCAN(aEntRelac, { |x|  IIF(ValType(x[2]) == "C", x[2] == "CRMA180()", Nil) })
	If nPos > 0
		ADD OPTION aAtiv   TITLE STR0063 ACTION "CRMA180(,,,3,,)" OPERATION 3  ACCESS 0 //"Nova Atividade"
		ADD OPTION aAtiv   TITLE STR0064 ACTION "CRMA180()" OPERATION 8  ACCESS 0 //"Todas as ATividades"
		aEntRelac[nPos][2] := aAtiv
	EndIf

	nPos := ASCAN(aEntRelac, { |x| IIF(ValType(x[2]) == "C", x[2] == "CRMA090()", Nil)})
	If nPos > 0
		ADD OPTION aAnotac   TITLE STR0065 ACTION "CRMA090(3)" OPERATION 3  ACCESS 0 //"Nova Anotação"
		ADD OPTION aAnotac   TITLE STR0066 ACTION "CRMA090()" OPERATION 8  ACCESS 0 //"Todas as Anotações"
		aEntRelac[nPos][2] := aAnotac
	EndIf
EndIf


// BUSCA SICAF BROWSE
If nModulo == 87
	aadd(aEntRelac,{ OemToAnsi(STR0072),"A020SICAF()",0 , 3}) // "Integração SICAF"
Endif

Asort(aEntRelac,,,{ | x,y | y[1] > x[1] } )
ADD OPTION aRotina TITLE STR0067 ACTION aEntRelac OPERATION 8  ACCESS 0//"Relacionadas"


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada - Adiciona rotinas ao aRotina       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MA020ROT")
	aRotAdic := ExecBlock("MA020ROT", .F., .F.)
	If ValType(aRotAdic) == "A"
		AEval(aRotAdic,{|x| AAdd(aRotina,x)})
	EndIf
EndIf

Return (aRotina)

//-----------------------------------------------------
/*/	Validacao do codigo do funcionario
/ author Jose Delmondes
/ since 25/02/2014
/*/
//------------------------------------------------------
Function A020NUMRA(cNumRa)
Local lRet 	:= .T.

If !Empty(cNumRa)
	dbSelectArea("SRA")
	dbSetOrder(1)
	If msSeek(xFilial("SRA")+cNumRa) .And. SRA->RA_SITFOLH == "D"
		MsgAlert("Funcionario Demitido.")
		lRet := .F.
	EndIf
EndIf

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} MATA020()
Gatilho responsavel por atualizar dados do fornecedor conforme tabela de funcionario
@author Leonardo Quintania
@since 06/02/2015
@version 1.0
@return NIL
/*/
//-------------------------------------------------------------------
Function A020FilSRA(cMat)

Default cMat := &(ReadVar())

If !Empty(cMat)
	If SRA->(MsSeek(xFilial("SRA")+cMat)) //Atualiza os dados do fornecedor com o funcionario encontrado.
		M->A2_NOME 		:= SRA->RA_NOMECMP
		M->A2_NREDUZ		:= SRA->RA_NOME
		M->A2_END			:= SRA->RA_ENDEREC
		M->A2_BAIRRO		:= SRA->RA_BAIRRO
		M->A2_EST			:= SRA->RA_ESTADO
		If cPaisLoc == "BRA"
			M->A2_COD_MUN		:= SRA->RA_CODMUN
		EndIf
		M->A2_MUN			:= SRA->RA_MUNICIP
		M->A2_CEP			:= SRA->RA_CEP
		M->A2_CGC			:= SRA->RA_CIC
		M->A2_PFISICA		:= SRA->RA_RG
		If cPaisLoc == "BRA"
			M->A2_DDD			:= SRA->RA_DDDFONE
		EndIf
		M->A2_TEL			:= StrTran(SRA->RA_TELEFON,"-","")
		M->A2_BANCO		:= Substr(SRA->RA_BCDEPSA,1,TamSX3("A2_BANCO")[1])
		M->A2_AGENCIA		:= Substr(SRA->RA_BCDEPSA,TamSX3("A2_BANCO")[1] +1,TamSX3("A2_AGENCIA")[1])
		M->A2_NUMCON		:= SRA->RA_CTDPFGT
		M->A2_EMAIL		:= SRA->RA_EMAIL
	EndIf
Else
	Help(" ",1,"MATIMPORT")
EndIf

Return cMat

//-------------------------------------------------------------------
/*/{Protheus.doc} A020SICAF()
Rotina que realiza consulta aos dados de fornecedores no SICAF e permite inclusão de fornecedor / participante
@author Rogerio Melonio
@since 22/06/2015
@version 1.0
@return NIL
/*/
//-------------------------------------------------------------------
Function A020SICAF()

FWExecView (STR0072, "GCPA180",  MODEL_OPERATION_INSERT,,{||.T.},,,,,,,)

Return Nil

//-------------------------------------------------------------------
/*/{Protheus.doc} A020BSCSCF()
Rotina que realiza consulta às habilitações do fornecedor no site do SICAF
@author Rogerio Melonio
@since 09/06/2015
@version 1.0
@return NIL
/*/
//-------------------------------------------------------------------
Function A020BSCSCF(cCGC)
Local cUrl1		:= "http://compras.dados.gov.br/fornecedores/v1/fornecedores.xml"
Local cUrl2		:= ""
Local cGetPar		:= ""
Local nTimeOut	:= 120 //Segundos
Local aHeaderStr	:= {}
Local cHeaderRet	:= ""
Local cResponse	:= ""
Local cAviso   	:= ""
Local cErro     	:= ""
Local lRet 		:= .T.
Local lSicaf 		:= .F.
Local lBasica    	:= .F.
Local lDetalhada 	:= .F.
Local cMun
Local nPos
Local nX
Local cCPFCNPJ	:= ""
Local cLoja   	:= ""
Local cRazao 	 	:= ""
Local cNome 	 	:= ""
Local cFantasia  	:= ""
Local cLogradouro	:= ""
Local cBairro	 	:= ""
Local cMunicipio 	:= ""
Local cUF  		:= ""
Local cCep       	:= ""

Local nTamA2Nome		:= TamSX3("A2_NOME")[1]
Local nTamA2Reduz		:= TamSX3("A2_NREDUZ")[1]
Local nTamA2Ender		:= TamSX3("A2_END")[1]
Local nTamA2Bairro	:= TamSX3("A2_BAIRRO")[1]
Local nTamA2Mun		:= TamSX3("A2_MUN")[1]

Default cCGC := &(ReadVar())
cCPFCNPJ := AllTrim(cCGC)

If Len(cCPFCNPJ) = 14
	cGetPar	:= "cnpj=" + cCPFCNPJ
	cUrl2 	:= "http://compras.dados.gov.br/fornecedores/doc/fornecedor_pj/" + cCPFCNPJ + ".xml"
Else
	Alert("Consulta disponível apenas para Pessoa Jurídica")
	lRet := .F.
Endif

If lRet
	aAdd(aHeaderStr,"Content-Type: application/x-www-form-urlencoded")

	//--> realiza consulta basica
	cResponse := HTTPGet( cUrl1, cGetPar, nTimeOut, aHeaderStr, @cHeaderRet )
	nErro1 := HTTPGetStatus(cErro)

	// se ocorreu erro no get do site do SICAF exibe erro
	If nErro1 <> 200
		cMsg := "Problemas consultando dados básicos do fornecedor" + CRLF + CRLF + cErro
		Alert(cMsg)
	Else
		oResponse1 := XmlParser(cResponse,"_",@cAviso,@cErro)
		//--> oEmbedded existe somente para a URL http://compras.dados.gov.br/fornecedores/v1/fornecedores.xml
		oEmbedded := XmlGetchild( oResponse1:_RESOURCE , XmlChildCount( oResponse1:_RESOURCE ))

		//--> se estrutura do oEmbedded está correta, extrai campos
		If Valtype(oEmbedded) == "O"
			oResource :=  XmlChildEx ( oEmbedded, "_RESOURCE" )

			//--> se estrutura do oResource está correta, extrai campos
			If Valtype(oResource) == "O"
				oNome := XmlChildEx ( oResource, "_NOME" )
				//Tipo=Object -> Tamanho=3
				cNome := Upper(oNome:TEXT)

				oAtivo := XmlChildEx ( oResource, "_ATIVO" )
				//Tipo=Object -> Tamanho=3
				cAtivo := Alltrim(Upper(oAtivo:TEXT)) // "true"
				lAtivo := cAtivo == "TRUE"

				oEstado := XmlChildEx ( oResource, "_UF" )
				//Tipo=Object -> Tamanho=3
				cUF := AllTrim(Upper(oEstado:TEXT)) // "SP"

				oRecadastro := XmlChildEx ( oResource, "_RECADASTRADO" )
				// Tipo=Object -> Tamanho=3
				cRecadastro := AllTrim(Upper(oRecadastro:TEXT)) // "false"
				lRecadastro := cRecadastro == "TRUE"

				M->A2_NOME 	:= Padr(cNome,nTamA2Nome)
				M->A2_NREDUZ	:= Padr(cNome,nTamA2Reduz)
				M->A2_EST		:= cUF
				M->A2_TIPO		:= Iif(Len(cCPFCNPJ)=11,"F",Iif(Len(cCPFCNPJ)=14,"J","X"))

				lBasica := .T.
			Else
				Alert("Fornecedor não encontrado na consulta básica")
			Endif
		Endif
	Endif

	//--> realiza consulta detalhada
	cErro     := ""
	cResponse := HTTPGet( cUrl2 , "" , nTimeOut, aHeaderStr, @cHeaderRet )
	nErro2 := HTTPGetStatus(cErro)

	If nErro2 <> 200
		cMsg := "Problemas consultando dados detalhados do fornecedor" + CRLF + CRLF + cErro
		Alert(cMsg)
	Else
		oResponse2 := XmlParser(cResponse,"_",@cAviso,@cErro)

		If Valtype(oResponse2) == "O"
			oResource :=  XmlChildEx ( oResponse2, "_RESOURCE" )
			//Tipo=Object -> Tamanho=15

			oRazao := XmlChildEx ( oResource, "_RAZAO_SOCIAL" )
			If ValType(oRazao) == "O"
				cRazao := AllTrim(Upper(oRazao:TEXT))
			Endif

			oNome := XmlChildEx ( oResource, "_NOME" )
			If ValType(oNome) == "O"
				cNome := AllTrim(Upper(oNome:TEXT))
			Endif

			oFantasia := XmlChildEx ( oResource, "_NOME_FANTASIA" )
			If ValType(oFantasia) == "O"
				cFantasia := Upper(oFantasia:TEXT)
			Endif

			oLogradouro := XmlChildEx ( oResource, "_LOGRADOURO" )
			If ValType(oLogradouro) == "O"
				cLogradouro := Upper(oLogradouro:TEXT)
			Endif

			oBairro := XmlChildEx ( oResource, "_BAIRRO" )
			If ValType(oBairro) == "O"
				cBairro := Upper(oBairro:TEXT)
			Endif

			oCEP := XmlChildEx ( oResource, "_CEP" )
			If ValType(oCEP) == "O"
				cCEP := StrTran(oCEP:TEXT,"-","")
			Endif

			oAtivo := XmlChildEx ( oResource, "_ATIVO" )
			cAtivo := Alltrim(Upper(oAtivo:TEXT)) // "true"
			lAtivo := cAtivo == "TRUE"

			oRecadastro := XmlChildEx ( oResource, "_RECADASTRADO" )
			cRecadastro := AllTrim(Upper(oRecadastro:TEXT)) // "false"
			lRecadastro := cRecadastro == "TRUE"

			If Empty(cMunicipio)
				oLinks :=  XmlChildEx ( oResource, "__LINKS" )
				oLink := XmlGetChild( oLinks , XmlChildCount( oLinks ) )

				If ValType(oLink) ==  "A"
					For nX := 1 To Len(oLink)
						If "MUNICIPIO" $ Upper(oLink[nX]:_TITLE:TEXT)
							cMun := Upper(oLink[nX]:_TITLE:TEXT)
							nPos := At( ":" , cMun )
							cMunicipio := AllTrim(Substr(cMun,nPos+1))
							cMunicipio := Padr(cMunicipio,nTamA2Mun)
							Exit
						Endif
					Next
				Endif
			Endif


			// Quando é pessoa fisica, é retornado o nome e não a razão social
			cRazao := Iif(Empty(cNome),cRazao, cNome )

			// caso o nome fantasia venha vazio, assume a razao social
			cFantasia := Iif( Empty(cFantasia), Left(cRazao,nTamA2Reduz), cFantasia )

			//cUF := Iif( Empty(cUF), aCNPJs[nW][03], cUF )

			M->A2_NOME 		:= Padr(cRazao		,nTamA2Nome	)
			M->A2_NREDUZ		:= Padr(cFantasia		,nTamA2Reduz	)
			M->A2_END			:= Padr(cLogradouro	,nTamA2Ender	)
			M->A2_BAIRRO		:= Padr(cBairro		,nTamA2Bairro	)
			M->A2_CEP			:= cCep
			M->A2_MUN			:= cMunicipio
			M->A2_TIPO			:= Iif(Len(cCPFCNPJ)=11,"F",Iif(Len(cCPFCNPJ)=14,"J","X"))

			lDetalhada := .T.
		Else
			Alert("Fornecedor não encontrado na consulta detalhada")
		Endif
	Endif
Endif

lSicaf := ( lBasica .Or. lDetalhada )

Return lSicaf


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A020CC2SA2ºAutor  ³Rodrigo M Pontes    º Data ³  17/11/15   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Filtro da consulta padrão CC2SA2                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function A020CC2SA2()

Local cFiltro	:= ""

If Type("M->A2_EST") <> "U"
	cFiltro := "CC2->CC2_EST==M->A2_EST"
Else
	cFiltro := "!Empty(CC2->CC2_EST)"
Endif

Return cFiltro

//-----------------------------------------------------
/*/	Função que é chamada antes de finalizar a transação na execução da funcao axinclui()
/ author Alfredo Medrano
/ since 04/04/2016
/*/
//------------------------------------------------------
Function A020InTra()
Local cItm    := ""

If cPaisLoc=='COL'

	cItm := GetSxENum( "CV0", "CV0_ITEM" )
	Begin Transaction
		RecLock("CV0",.T.)
		CV0->CV0_FILIAL	:=xFilial("CV0")
		CV0->CV0_PLANO	:="01"
		CV0->CV0_ITEM		:=cItm
		CV0->CV0_CODIGO 	:= IIF(M->A2_TIPDOC=="31",M->A2_CGC,M->A2_PFISICA)
		CV0->CV0_CLASSE  	:= "2"
		CV0->CV0_NORMAL 	:= "2"
		CV0->CV0_ENTSUP 	:= "22"
		CV0->CV0_DTIEXI 	:= dDatabase
		CV0->CV0_TIPO00 	:= "02"
		CV0->CV0_DESC   	:= M->A2_NOME
		CV0->CV0_TIPO01 	:= M->A2_TIPDOC
		CV0->CV0_COD   	:= M->A2_COD
	   CV0->CV0_LOJA  	:= M->A2_LOJA
		MsUnlock()
		ConfirmSX8()
	End Transaction

EndIf

If lExistFKJ
	Fa993grava(1)
EndIf
Return .T.
//-----------------------------------------------------
/*/	Função que é chamada antes de finalizar a transação na execução da funcao axiAltera()
/ author Alfredo Medrano
/ since 04/04/2016
/*/
//------------------------------------------------------
Function A020AltTra()
Local lRet:= .T.

	If cPaisLoc=='COL'
		DbSelectArea("CV0")
		DbSetOrder(4)//CV0_FILIAL+CV0_COD+CV0_TIPO00+CV0_CODIGO
		If DbSeek(xFilial("CV0")+M->A2_COD+'02'+M->A2_CGC) .OR. DbSeek(xFilial("CV0")+M->A2_COD+'02'+M->A2_PFISICA)
			RecLock("CV0",.F.)
			CV0->CV0_DESC	:= M->A2_NOME
			CV0->CV0_COD	:= M->A2_COD
		   CV0->CV0_LOJA	:= M->A2_LOJA
		   MsUnlock()
		Elseif DbSeek(xFilial("CV0")+M->A2_COD+'02')
			RecLock("CV0",.F.)
			CV0->CV0_DESC	:= M->A2_NOME
			CV0->CV0_COD	:= M->A2_COD
		   CV0->CV0_LOJA	:= M->A2_LOJA
		   CV0->CV0_CODIGO := IIF(M->A2_TIPDOC=="31",M->A2_CGC,M->A2_PFISICA)
		   CV0->CV0_TIPO01 	:= M->A2_TIPDOC
		   MsUnlock()
		EndIf
	EndIf

	If lExistFKJ
		Fa993grava(1)
	EndIf
Return lRet
//-----------------------------------------------------
/*/	Função que é chamada antes de finalizar a transação na execução da funcao AxDeleta()
/ author Alfredo Medrano
/ since 04/04/2016
/*/
//------------------------------------------------------
Function A020DelTra()
Local lRet:= .T.

	If cPaisLoc=='COL'
		DbSelectArea("CV0")
		DbSetOrder(4)//CV0_FILIAL+CV0_COD+CV0_TIPO00+CV0_CODIGO
		If DbSeek(xFilial("CV0")+M->A2_COD+'02'+M->A2_CGC) .OR. DbSeek(xFilial("CV0")+M->A2_COD+'02'+M->A2_PFISICA)
			RecLock("CV0",.F.)
			dbDelete()
		   MsUnlock()
		EndIf
	EndIf

	If lExistFKJ
		Fa993excl(2,M->A2_COD,M->A2_LOJA)
	EndIf
Return lRet


/*/{Protheus.doc} A020VldUCod
//Realiza a validação referente a mensagem única CustomerVendorReserveID
@author caio.y
@since 08/06/2017
@version undefined

@type function
/*/
Function A020VldUCod()
Local lRet		:= .T.
Local aAreaSA1	:= SA1->(GetArea())
Local aAreaSA2	:= SA2->(GetArea())

//-- Valida unificação de códigos
If lIntUnqCod .And. INCLUI

	If !Empty(M->A2_CGC)
		SA2->(dbSetOrder(3))
		If SA2->(MsSeek(xFilial("SA2") + M->A2_CGC ))
			Help( " " , 1 , "EXISTCLI" ,,, 2 , 0 )
			lRet	:= .F.
		EndIf
	EndIf

	If lRet

		If M->A2_TIPO == "J" //-- Juridico
			If !Empty(M->A2_CGC) .And. !Empty(M->A2_INSCR)
				SA1->(dbSetOrder(3))
				If SA1->(MsSeek(xFilial("SA1") + M->A2_CGC ))
					If RTrim(M->A2_INSCR) == RTrim(SA1->A1_INSCR)
						M->A2_COD	:= SA1->A1_COD
					Else
						lRet	:= MATA020B(.F.,M->A2_COD,"MATA020" )
					EndIf
				Else
					lRet	:= MATA020B(.F.,M->A2_COD,"MATA020" )
				EndIf
			EndIf
		ElseIf M->A2_TIPO == "F" .Or. M->A2_TIPO == "X" //-- Fisico ou Estrangeiro
			If !Empty(M->A2_CGC)
				SA1->(dbSetOrder(3))
				If SA1->(MsSeek(xFilial("SA1") + M->A2_CGC ))
					If RTrim(M->A2_INSCR) == RTrim(SA1->A1_INSCR)
						M->A2_COD	:= SA1->A1_COD
					Else
						lRet	:= MATA020B(.F.,M->A2_COD,"MATA020"  )
					EndIf
				Else
					lRet	:= MATA020B(.F.,M->A2_COD,"MATA020"  )
				EndIf
			EndIf
		EndIf

	EndIf
EndIf

RestArea(aAreaSA2)
RestArea(aAreaSA1)
Return lRet


//-------------------------------------------------------------------
/*/{Protheus.doc} A20LenCon
Validadtion of the Length of FIL_CONTA
@author 	Flavio Lopes
@since 		28/03/2017
@version 	1.0
@project MA3
/*/
//-------------------------------------------------------------------

Function A020LenAcc(cFilAcc)
Local lRet as logic
Local cForeign as character
Local nFldLen	as numeric

lRet 		:= .T.
cForeign	:= FwFldGet( "FIL_FOREIG" )
nFldLen		:= Len(AllTrim(cFilAcc))

If cForeign == '2'
	If nFldLen != 20
		Help(" ",1,"MA020RUSLEN")//For Russian banks, this field shall be filled with exactly 20 characters
		lRet := .F.
	EndIf
EndIf

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} A020VldBIK
Fill the fields about F45 table (Russian Banks)
@author 	Flavio Lopes
@since 		28/03/2017
@version 	1.0
@project MA3
/*/
//-------------------------------------------------------------------

Function A020VldBIK(cBIK)
Local lRet as logic
Local oModel as Object
Local oBanks as Object

lRet := .T.
oModel := FwModelActive()
oBanks := oModel:GetModel("BANCOS")


If FwFldGet( "FIL_FOREIG" ) == '2'
	F45->(DbSetOrder(1))
	If F45->(DbSeek(xFilial("F45")+cBik))
		If F45->F45_STATUS == "2"
			oBanks:GetStruct():SetProperty("FIL_BKNAME", MODEL_FIELD_WHEN, {|| .T.})
			oBanks:GetStruct():SetProperty("FIL_CITY", MODEL_FIELD_WHEN, {|| .T.})
			oBanks:GetStruct():SetProperty("FIL_SWIFT", MODEL_FIELD_WHEN, {|| .T.})

			oBanks:LoadValue("FIL_BKNAME", SubStr(F45->F45_NAME, 1, TamSX3("FIL_BKNAME")[1]))
			oBanks:LoadValue("FIL_CORRAC", SubStr(F45->F45_CORRAC, 1, TamSX3("FIL_CORRAC")[1]))
			oBanks:LoadValue("FIL_CITY", SubStr(F45->F45_CITY, 1, TamSX3("FIL_CITY")[1]))
			oBanks:LoadValue("FIL_SWIFT", SubStr(F45->F45_SWIFT, 1, TamSX3("FIL_SWIFT")[1]))

			oBanks:GetStruct():SetProperty("FIL_BKNAME", MODEL_FIELD_WHEN, {|| FWFldGet("FIL_FOREIG") == "1"})
			oBanks:GetStruct():SetProperty("FIL_CITY", MODEL_FIELD_WHEN, {|| FWFldGet("FIL_FOREIG") == "1"})
			oBanks:GetStruct():SetProperty("FIL_SWIFT", MODEL_FIELD_WHEN, {|| FWFldGet("FIL_FOREIG") == "1"})
		Else
			Help(" ",1,"MA020NOTWRKBK")//This Russian Bank is set as not working.
			lRet := .F.
		Endif
	Else
		Help(" ",1,"MA020RUSBIK")//This BIK code is not valid for a Russian Bank
		lRet := .F.
	Endif
Endif

Return lRet
//-------------------------------------------------------------------
/*/{Protheus.doc} A020GatBnk
Trigger for SE2 fields (Russian Banks)
@author 	Flavio Lopes
@since 		28/03/2017
@version 	1.0
@project MA3
/*/
//-------------------------------------------------------------------
Function A020GatBnk(cField)
Local aAreaFIL as array
Local cRet as character

aAreaFIL:= {}
aAreaFIL:= FIL->( GetArea() )

cRet	:= &("M->" + cField)

FIL->(DbSetOrder(3))
If FIL->(DbSeek(xFilial("FIL")+"1"+M->(E2_FORNECE+E2_LOJA)))
	If FIL->FIL_CLOSED <> "1"
		Do Case
			Case  cField == "E2_FORBCO"
				cRet := FIL->FIL_BANCO
			Case  cField == "E2_FORAGE"
				cRet := FIL->FIL_AGENCI
			Case  cField == "E2_FORCTA"
				cRet := FIL->FIL_CONTA
		End Case
	Endif
Endif

RestArea( aAreaFIL )

Return cRet

//-------------------------------------------------------------------
/*/{Protheus.doc} MA020PcCgc
Pesquisa a picture do campo A2_CGC, nessária para nova legislação em que
produtores rurais de SP são pessoas físicas com CNPJ.
@author 	Luiz Henrique Bourscheid
@since 		05/12/2017
@version 	1.0
@project MA3
/*/
//-------------------------------------------------------------------
Function MA020PcCgc()

Return PICPES(IIf((M->A2_INDRUR <> "0" .And. M->A2_EST == "SP" .And. M->A2_TIPO == "F"), "J", M->A2_TIPO ))

//-------------------------------------------------------------------
/*/{Protheus.doc} A020GetBnk
Retorno o banco relacionado ao fornecedor
@author 	Ricardo Prandi
@since 		05/12/2017
@version 	1.0
/*/
//-------------------------------------------------------------------
Function A020GetBnk(cForn,cLoja)
Local aArea  := GetArea()
Local aBanco := {" "," "," "," "," "}

dbSelectArea("SA2")
dbSetOrder(1)
If dbSeek(xFilial("SA2")+cForn+cLoja)
	If !Empty(SA2->A2_BANCO)
		aBanco := {SA2->A2_BANCO,SA2->A2_AGENCIA,SA2->A2_DVAGE,SA2->A2_NUMCON,SA2->A2_DVCTA}
	EndIf
EndIf

If Empty(aBanco) .And. Select("FIL") > 0
	dbSelectArea("FIL")
	dbSetOrder(1)
	If dbSeek(xFilial("FIL")+cForn+cLoja+"1")
		aBanco := {FIL->FIL_BANCO,FIL->FIL_AGENCI,FIL->FIL_DVAGE,FIL->FIL_CONTA,FIL->FIL_DVCTA}
	Endif
EndIf

If Empty(aBanco) .And. Select("FIL") > 0
	aBanco := {CriaVar("FIL->FIL_BANCO"),CriaVar("FIL->FIL_AGENCI"),CriaVar("FIL->FIL_DVAGE"),CriaVar("FIL->FIL_CONTA"),CriaVar("FIL->FIL_DVCTA")}
Endif

RestArea(aArea)

Return aBanco

// ----- FUNCOES TRANSFERIDAS DO MATA020M PARA CORRETO FUNCIONAMENTO DO MVC LOCALIZADO, POIS AS FUNCOES TERMINADAS EM "DEF" DEVEM ESTAR NO FONTE QUE CONSTA NO MENU (MATA020) -----

/*/{Protheus.doc} BrowseDef
Define o browse padrão para o cadastro de fornecedor.

@type Static Function
@author Totvs
@since 26/03/2018
@version P12.1.17
/*/
Static Function BrowseDef()

Local oBrowse
Local cFiltraSA2 := " "
Local aMemUser   := {}

//Habilita a perguntas da rotina
Set Key VK_F12 to F12Init()

oBrowse := FWMBrowse():New()
oBrowse:SetAlias("SA2")
oBrowse:SetDescription(STR0006) //"Fornecedores"

//Verificacao de filtro na Mbrowse
If ( ExistBlock("MA020FIL") )
	cFiltraSA2 := AllTrim(ExecBlock("MA020FIL",.F.,.F.))
	oBrowse:SetFilterDefault(cFiltraSA2)
EndIf

Return oBrowse

/*/{Protheus.doc} ModelDef
Define o model padrão para o cadastro de fornecedor.

Eventos:
	- padrão
	- integração com TAF
	- pontos de entrada legados

O modelo tem adicionado a si o cadastro de bancos (FIL) do fornecedor.

@type Static Function
@author Totvs
@since 26/03/2018
@version P12.1.17
/*/
Static Function ModelDef()

Local oModel
Local oStrSA2   := FWFormStruct(1,"SA2")
Local oStrFIL   := FWFormStruct(1,"FIL")
Local oEvent    := MATA020EVDEF():New()
Local oEventPE  := MATA020EVPE():New()
Local oEventOMS := IIF(FindFunction("MATA020OMS"),MATA020EVOMS():New(),Nil)
Local oEventTAF
Local nX
Local aMemUser
Local cVld

Static aFornNovo	:= {"",""}

//Ponto de entrada para adicao de campos memo do usuario
If ExistBlock( "MA020MEM" )
	If Valtype( aMemUser := ExecBlock( "MA020MEM", .F., .F. ) ) == "A"
		For nX := 1 to Len(aMemUser)
			FWMemoVirtual(oStrSA2, aMemUser)
		Next nX
	EndIf
EndIf

oModel := MPFormModel():New('CUSTOMERVENDOR',,{|oModel|A020TDOK(oModel)},,{|oModel|A020cancel(oModel)})
oModel:SetDescription('Cadastro de Fornecedores')

cVld := AllTrim(oStrSA2:GetProperty("A2_COD", MODEL_FIELD_CVALID ) )
cVld += IIf(!Empty(cVld),'.AND.','')+'ValidA2COD()'
oStrSA2:SetProperty("A2_COD",MODEL_FIELD_VALID,FWBuildFeature(STRUCT_FEATURE_VALID,cVld) )

oModel:addFields('SA2MASTER',,oStrSA2)
oModel:AddGrid("BANCOS","SA2MASTER",oStrFIL)

oModel:SetRelation('BANCOS', { 		{ 'FIL_FILIAL', 'xFilial("SA2")'  },;
									{ 'FIL_FORNEC', 'A2_COD'  }, ;
									{ 'FIL_LOJA'  , 'A2_LOJA' } }, FIL->(IndexKey(1)) )

oModel:getModel('BANCOS'):SetOptional(.T.)
oModel:GetModel('BANCOS'):SetUniqueLine( { 'FIL_FILIAL', 'FIL_BANCO', 'FIL_AGENCI', 'FIL_CONTA' } )

oModel:SetDeActivate({|oModel| A020Deactivate(oModel)})

oModel:InstallEvent("MATA020EVDEF", /*cOwner*/, oEvent)
oModel:InstallEvent("MATA020EVPE",  /*cOwner*/, oEventPE)
If !Empty(oEventOMS)
	oModel:InstallEvent("MATA020EVOMS", /*cOwner*/, oEventOMS)
EndIf

If TAFExstInt()
	oEventTAF := MATA020EVTAF():New()
	oModel:InstallEvent("MATA020EVTAF", "MATA020EVDEF", oEventTAF)
EndIf

Return oModel

/*/{Protheus.doc} ViewDef
Define a view padrão para o cadastro de fornecedor.

@type Static Function
@author Totvs
@since 14/02/2018
@version P12.1.17
/*/
Static Function ViewDef()

Local oView
Local oModel
Local oStrViewSA2:= FWFormStruct(2, 'SA2')
Local lPyme	:= Iif(Type("__lPyme") <> "U",__lPyme,.F.)
Local aUsrBut
Local nX

//----------------------------------------------------------------------------------------
// Nao mudar para ModelDef() pois o FWLoadModel trata o load dos modelos localizados
//----------------------------------------------------------------------------------------
oModel := FWLoadModel("MATA020M")
If oModel == Nil	// Tratamento realizado pois os primeiros fontes localizados foram criados como MATA020M e os paises sem fonte localizado retornam Nil ao chamar MATA020M
	oModel := FWLoadModel("MATA020")
EndIf

oView := FWFormView():New()
oView:SetModel(oModel)

oView:showUpdateMsg(.F.)
oView:showInsertMsg(.T.)

oView:AddField('SA2FORM' , oStrViewSA2,'SA2MASTER' )
oView:CreateHorizontalBox( 'BOXSA2', 100)
oView:SetOwnerView('SA2FORM','BOXSA2')

//Habilita o Banco de Conhecimento
If !lPyme
	oView:AddUserButton(STR0023,'WEB', {|| fGeoWizard("SA2",M->A2_COD+M->A2_LOJA,;
	{"M->A2_END","M->A2_MUN","M->A2_EST","M->A2_CEP","M->A2_BAIRRO"},;
	{|lContinua| CodGeoRev(aCoor,NIL,@lContinua)[6] <> M->A2_CEP})} ) //Geoprocessamento

	oView:AddUserButton(STR0021,'BMPVISUAL', {|| fConsWizard({M->A2_NOME, M->A2_TIPO, M->A2_NREDUZ, ;
	M->A2_END, M->A2_CEP, M->A2_DDD, M->A2_TEL, M->A2_CGC,"",""})} ) //Consulta De Crédito - Ecossistema
EndIf

oView:AddUserButton(STR0068,'BUDGET',{|| A020Bancos(oView) })//'Bancos' {||FtBanco("SA2",SA2->(RecNo()),2)})

//Habilita Integracao com Operadoras de Frotas
If SuperGetMV('MV_TMSOPDG',,'0') == '2'
	oView:AddUserButton(STR0050,'BMPGROUP', {|| TMSCORNTRC() }) //--"Consulta RNTRC"
EndIf

//Ponto de entrada para adicao de botoes de usuario
If ExistBlock( "MA020BUT" )
	If Valtype( aUsrBut := Execblock( "MA020BUT", .f., .f. ) ) == "A"
		For nX:=1 to Len(aUsrBut)
			oView:AddUserButton(aUsrBut[nX][3],aUsrBut[nX][1], aUsrBut[nX][2])
		Next nX
	EndIf
EndIf

Return oView

// ----- AS FUNCOES ABAIXO ESTAO REDIRECIONANDO PARA O MATA020M POIS AS VALIDACOES FORAM CRIADAS NO MATA020M -----

/*/{Protheus.doc} A020Auto
Função que realiza a rotina automatica para o MATA020 em MVC.

@type Static Function
@author Totvs
@since 26/03/2018
@version P12.1.17
/*/
Static Function A020Auto(aRotAuto, nOpcAuto)
Return A020AutoM(aRotAuto, nOpcAuto)

/*/{Protheus.doc} A020Auto
Função que realiza a chamada do atalho F12 da rotina.

@type Static Function
@author Totvs
@since 26/03/2018
@version P12.1.17
/*/
Static Function F12Init()
Return F12InitM()

/*/{Protheus.doc} A020TDOK
Função de validação da tela após clicar em confirmar

@type Static Function
@author Totvs
@since 26/03/2018
@version P12.1.17
/*/
Static Function A020TDOK(oFields)
Local lReturn 	:= .T.

IF Type("INCLUI") == "L" .AND. INCLUI//Houve alteração manual do código do fornecedor
	If aFornNovo[1]!=aFornNovo[2] .AND. __lSx8
		RollBackSx8()
	EndIf
	If lReturn//Limpa aFornNovo para nova inclusão
		aFornNovo := {"",""}
	EndIf
EndIf
Return lReturn

/*/{Protheus.doc} A020cancel
Bloco de cancelamento do Modelo. Está sendo chamado pelo bloco, pois, neste momento não existe um evento específico para o cancelamento

@type Static Function
@author Totvs
@since 26/03/2018
@version P12.1.17
/*/
Static Function A020cancel(oModel)
Local lIntUnqCod	:= FwHasEAI("MATA020B")

//-- EXCLUSÃO DA RESERVEID
If lIntUnqCod
	lIncluiBkp	:= INCLUI
	lAlteraBkp	:= ALTERA

	INCLUI	:= .F.
	ALTERA	:= .F.

	MATA020B(.T.,,"MATA020",.F.,.T.,.T.)

	INCLUI	:= lIncluiBkp
	ALTERA	:= lAlteraBkp
EndIf

If Type("INCLUI") == "L" .AND. INCLUI
	If aFornNovo[2] == aFornNovo[1] .And. __lSx8
		RollBackSx8()
	EndIf
EndIf

Return .T.

/*/{Protheus.doc} ValidA2COD
Atualiza controle de alteração do código do fornecedor para controle do RollBackSX8

@type Static Function
@author Totvs
@since 26/03/2018
@version P12.1.17
/*/
Function ValidA2COD()
Local lReturn := .T.
Local oModel  := FwModelActive()

If Empty(aFornNovo[1])
	aFornNovo[1] := M->A2_COD//Conteúdo anterior
	If Empty(aFornNovo[1])
		aFornNovo[1] := oModel:GetValue("SA2MASTER","A2_COD")//Conteúdo novo
	EndIf
EndIf
aFornNovo[2] := oModel:GetValue("SA2MASTER","A2_COD")//Conteúdo novo
Return lReturn

/*/{Protheus.doc} A020Deactivate
Executado no deactivate do modelo de dados.

@type Static Function
@author Totvs
@since 26/03/2018
@version P12.1.17
/*/
Static Function A020Deactivate(oFields)
Return A020DeactM(oFields)

/*/{Protheus.doc} A020AjInteg
Função para correção de adapter, substituindo MATA020M por MATA020

@type Function
@author Totvs
@since 26/03/2018
@version P12.1.17
/*/
Function A020AjInteg()

	//Busca adapter MATA020M
	If FWXX4Seek("MATA020M")
		//Busca adapter MATA020 para garantir que cadastro não ficará duplicado
		If FWXX4Seek("MATA020 ")
			//Posiciona novamente no MATA020M para deletar
			FWXX4Seek("MATA020M")
			RecLock("XX4",.F.)
			DbDelete()
			MsUnlock()
		Else
			//Caso não exista já o MATA020, altera o cadastro
			RecLock("XX4",.F.)
				XX4->XX4_ROTINA := "MATA020"
			MsUnlock()
		EndIf
	EndIf

Return
